window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"bci_essentials": {"fullname": "bci_essentials", "modulename": "bci_essentials", "kind": "module", "doc": "<p><strong>A package for online/offline processing of EEG-based BCIs.</strong></p>\n\n<p>This library contains modules for the processing of EEG data for BCI\napplications.</p>\n\n<p>Supported applications are currently <strong>P300 ERP</strong> and <strong>SSVEP</strong>.</p>\n\n<p>Modules are including for running <strong>online</strong> and <strong>offline</strong> processing\nof EEG-based BCIs in an identical fashion.</p>\n\n<h6 id=\"applications\">Applications</h6>\n\n<ol>\n<li>Load offline data</li>\n<li>Stream online data</li>\n<li>Provide options for visualizing BCI data</li>\n</ol>\n\n<h6 id=\"limitations\">Limitations</h6>\n\n<ol>\n<li>Currently will not handle ERP sessions longer that 10,000 markers in\nduration to avoid latency cause by dynamic sizing of numpy ndarrays.\nThis number can be increased by changing the <code>max_windows</code> variable in\nthe <code>ERP_data</code> class.</li>\n</ol>\n"}, "bci_essentials.bci_data": {"fullname": "bci_essentials.bci_data", "modulename": "bci_essentials.bci_data", "kind": "module", "doc": "<p>Module for managing BCI data.</p>\n\n<p>This module provides data classes for different BCI paradigms.</p>\n\n<p>It includes the loading of offline data in <code>xdf</code> format\nor the live streaming of LSL data.</p>\n\n<p>The loaded/streamed data is added to a buffer such that offline and\nonline processing pipelines are identical.</p>\n\n<p>Data is pre-processed (using the <code>signal_processing</code> module), windowed,\nand classified (using one of the <code>classification</code> sub-modules).</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<ul>\n<li><code>EEG_data</code> : For processing continuous data in windows of a defined\nlength.</li>\n<li><code>ERP_data</code> : For processing P300 or other Event Related Potentials\n(ERP).</li>\n</ul>\n"}, "bci_essentials.bci_data.EEG_data": {"fullname": "bci_essentials.bci_data.EEG_data", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data", "kind": "class", "doc": "<p>Class that holds, windows, processes, and classifies EEG data.</p>\n\n<p>This class is used for the processing of continuous EEG data in\nwindows of a defined length.</p>\n\n<p>It includes the loading of offline data in <code>xdf</code> format.</p>\n"}, "bci_essentials.bci_data.EEG_data.__init__": {"fullname": "bci_essentials.bci_data.EEG_data.__init__", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.__init__", "kind": "function", "doc": "<p>Initializes <code>EEG_data</code> class.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>explict_settings</strong> (bool):\nDescription of attribute <code>explict_settings</code>.\n<ul>\n<li>Initial value is <code>False</code>.</li>\n</ul></li>\n<li><strong>classifier_defined</strong> (bool):\nDescription of attribute <code>classifier_defined</code>.\n<ul>\n<li>Initial value is <code>False</code>.</li>\n</ul></li>\n<li><strong>stream_outlet</strong> (bool):\nDescription of attribute <code>stream_outlet</code>.\n<ul>\n<li>Initial value is <code>False</code>.</li>\n</ul></li>\n<li><strong>ping_count</strong> (bool):\nDescription of attribute <code>ping_count</code>.\n<ul>\n<li>Initial value is <code>0</code>.</li>\n</ul></li>\n<li><strong>ping_interval</strong> (bool):\nDescription of attribute <code>ping_interval</code>.\n<ul>\n<li>Initial value is <code>5</code>.</li>\n</ul></li>\n<li><strong>resting_state_exists</strong> (bool):\nDescription of attribute <code>resting_state_exists</code>.\n<ul>\n<li>Initial value is <code>False</code>.</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"fullname": "bci_essentials.bci_data.EEG_data.explicit_settings", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.explicit_settings", "kind": "variable", "doc": "<p></p>\n"}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"fullname": "bci_essentials.bci_data.EEG_data.classifier_defined", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.classifier_defined", "kind": "variable", "doc": "<p></p>\n"}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"fullname": "bci_essentials.bci_data.EEG_data.stream_outlet", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.stream_outlet", "kind": "variable", "doc": "<p></p>\n"}, "bci_essentials.bci_data.EEG_data.ping_count": {"fullname": "bci_essentials.bci_data.EEG_data.ping_count", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.ping_count", "kind": "variable", "doc": "<p></p>\n"}, "bci_essentials.bci_data.EEG_data.ping_interval": {"fullname": "bci_essentials.bci_data.EEG_data.ping_interval", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.ping_interval", "kind": "variable", "doc": "<p></p>\n"}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"fullname": "bci_essentials.bci_data.EEG_data.resting_state_exists", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.resting_state_exists", "kind": "variable", "doc": "<p></p>\n"}, "bci_essentials.bci_data.EEG_data.edit_settings": {"fullname": "bci_essentials.bci_data.EEG_data.edit_settings", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.edit_settings", "kind": "function", "doc": "<p>Explicit definition of settings.</p>\n\n<p>Change the settings for (...?)</p>\n\n<p>\"not recommended.\"</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>user_id</strong> (str, <em>optional</em>):\nThe user ID.\n<ul>\n<li>Default is <code>\"0000\"</code>.</li>\n</ul></li>\n<li><strong>nchannels</strong> (int, <em>optional</em>):\nThe number of channels.\n<ul>\n<li>Default is <code>8</code>.</li>\n</ul></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>, <em>optional</em>):\nThe channel labels.\n<ul>\n<li>Default is <code>[\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"]</code>.</li>\n</ul></li>\n<li><strong>fsample</strong> (int, <em>optional</em>):\nThe sampling rate.\n<ul>\n<li>Default is <code>256</code>.</li>\n</ul></li>\n<li><strong>max_size</strong> (int, <em>optional</em>):\nDescription of parameter <code>max_size</code>.\n<ul>\n<li>Default is <code>10000</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: <code>self.explicit_settings</code> is set to <code>True</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"s1\">&#39;0000&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">fsample</span><span class=\"o\">=</span><span class=\"mi\">256</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"o\">=</span><span class=\"mi\">10000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"fullname": "bci_essentials.bci_data.EEG_data.load_offline_eeg_data", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.load_offline_eeg_data", "kind": "function", "doc": "<p>Loads offline data from a file.</p>\n\n<p>Currently only supports .xdf</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nThe filename.</li>\n<li><strong>format</strong> (str, <em>optional</em>):\nThe file format.\n<ul>\n<li>Default is <code>\"xdf\"</code>.</li>\n</ul></li>\n<li><strong>subset</strong> (list of <code>int</code>, <em>optional</em>):\nDescription of parameter <code>subset</code>.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n<li><strong>print_output</strong> (bool, <em>optional</em>):\nOutput is printed if <code>True</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: <code>self</code> is updated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;xdf&#39;</span>, </span><span class=\"param\"><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">print_output</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"fullname": "bci_essentials.bci_data.EEG_data.get_info_from_file", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.get_info_from_file", "kind": "function", "doc": "<p>Get EEG metadata from the stream.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (pylsl.StreamInlet -\u00a0need to verify):\nData object from the LSL stream.</li>\n<li><strong>print_output</strong> (bool, <em>optional</em>):\nOutput is printed if <code>True</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>Returns:</strong></li>\n<li><strong><code>None</code></strong>: <code>self</code> is updated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">print_output</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"fullname": "bci_essentials.bci_data.EEG_data.stream_online_eeg_data", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.stream_online_eeg_data", "kind": "function", "doc": "<p>Stream data from an online source.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>timeout</strong> (int, <em>optional</em>):\nDescription of parameter <code>timeout</code>.\nDefault is <code>5</code>.</li>\n<li><strong>max_eeg_samples</strong> (int, <em>optional</em>):\nDescription of parameter <code>max_eeg_samples</code>.\n<ul>\n<li>Default is <code>1000000</code>.</li>\n</ul></li>\n<li><strong>max_marker_samples</strong> (int, <em>optional</em>):\nDescription of parameter <code>max_marker_samples</code>.\n<ul>\n<li>Default is <code>100000</code>.</li>\n</ul></li>\n<li><strong>eeg_only</strong> (bool, <em>optional</em>):\nDescription of parameter <code>eeg_only</code>.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>subset</strong> (list of <code>int</code>, <em>optional</em>):\nDescription of parameter <code>subset</code>.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: <code>self</code> is updated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">max_eeg_samples</span><span class=\"o\">=</span><span class=\"mi\">1000000</span>,</span><span class=\"param\">\t<span class=\"n\">max_marker_samples</span><span class=\"o\">=</span><span class=\"mi\">100000</span>,</span><span class=\"param\">\t<span class=\"n\">eeg_only</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"fullname": "bci_essentials.bci_data.EEG_data.get_info_from_stream", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.get_info_from_stream", "kind": "function", "doc": "<p>Get headset data from stream.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: <code>self</code> is updated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"fullname": "bci_essentials.bci_data.EEG_data.pull_data_from_stream", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.pull_data_from_stream", "kind": "function", "doc": "<p>Get new data from stream.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>include_markers</strong> (bool, <em>optional</em>):\nWhether to include marker data in the pull.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>include_eeg</strong> (bool, <em>optional</em>):\nWhether to include EEG data in the pull.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>return_eeg</strong> (bool, <em>optional</em>):\nWhether to return EEG data.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_eeg_timestamps</strong> (list of <code>float</code>):\nTimestamps of new EEG data.\nOnly returns if <code>return_eeg</code> is <code>True</code>.</li>\n<li><strong>new_eeg_data</strong> (pylsl.StreamInlet - need to verify):\nData object from the LSL stream.\nOnly returns if <code>return_eeg</code> is <code>True</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">include_markers</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">include_eeg</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">return_eeg</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.save_data": {"fullname": "bci_essentials.bci_data.EEG_data.save_data", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.save_data", "kind": "function", "doc": "<p>Save the data from different stages.</p>\n\n<p>Creates a directory with x files. Includes raw EEG, markers,\nprocessed EEG, features.</p>\n\n<p><strong>NOT IMPLEMENTED YET</strong></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>directory_name</strong> (str):\nName of the directory to save the data to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>data_pickle</strong> (pickle):\nSaves the data as a pickle file. Includes raw EEG, markers,\nprocessed EEG, features.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">directory_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"fullname": "bci_essentials.bci_data.EEG_data.mne_export_as_raw", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.mne_export_as_raw", "kind": "function", "doc": "<p>MNE export EEG as RawArray.</p>\n\n<p>Exports the EEG data as a MNE RawArray object.</p>\n\n<p><strong>Requires MNE</strong></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>raw_array</strong> (mne.io.RawArray):\nMNE RawArray object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"fullname": "bci_essentials.bci_data.EEG_data.mne_export_as_epochs", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.mne_export_as_epochs", "kind": "function", "doc": "<p>MNE export EEG as EpochsArray.</p>\n\n<p>Exports the EEG data as a MNE EpochsArray object.</p>\n\n<p><strong>Requires MNE</strong></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>epochs_array</strong> (mne.EpochsArray):\nMNE EpochsArray object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"fullname": "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.mne_export_resting_state_as_raw", "kind": "function", "doc": "<p>MNE export resting state EEG as RawArray.</p>\n\n<p>Exports the resting state EEG data as a MNE RawArray object.</p>\n\n<p><strong>Requires MNE</strong></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>raw_array</strong> (mne.io.RawArray):\nMNE RawArray object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.preprocessing": {"fullname": "bci_essentials.bci_data.EEG_data.preprocessing", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.preprocessing", "kind": "function", "doc": "<p>Signal preprocessing.</p>\n\n<p>Preprocesses the signal using one of the methods from the\n<code>signal_processing.py</code> module.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>window</strong> (numpy.ndarray):\nWindow of EEG data.\n2D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>N_samples</code>)</p></li>\n<li><strong>option</strong> (str, <em>optional</em>):\nPreprocessing option. Options include:\n<ul>\n<li><code>\"notch\"</code> : Notch filter</li>\n<li><code>\"bandpass\"</code> : Bandpass filter</li>\n<li>Default is <code>None</code>.</li>\n</ul></li>\n<li><strong>order</strong> (int, <em>optional</em>):\nOrder of the Bandpass filter.\n<ul>\n<li>Default is <code>5</code>.</li>\n</ul></li>\n<li><strong>fc</strong> (int, <em>optional</em>):\nFrequency of the notch filter.\n<ul>\n<li>Default is <code>60</code>.</li>\n</ul></li>\n<li><strong>fl</strong> (int, <em>optional</em>):\nLower corner frequency of the bandpass filter.\n<ul>\n<li>Default is <code>10</code>.</li>\n</ul></li>\n<li><strong>fh</strong> (int, <em>optional</em>):\nUpper corner frequency of the bandpass filter.\n<ul>\n<li>Default is <code>50</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>new_window</strong> (numpy.ndarray):\nPreprocessed window of EEG data.\n2D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>N_samples</code>)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">window</span>, </span><span class=\"param\"><span class=\"n\">option</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">fc</span><span class=\"o\">=</span><span class=\"mi\">60</span>, </span><span class=\"param\"><span class=\"n\">fl</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">fh</span><span class=\"o\">=</span><span class=\"mi\">50</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"fullname": "bci_essentials.bci_data.EEG_data.artefact_rejection", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.artefact_rejection", "kind": "function", "doc": "<p>Artefact rejection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>window</strong> (numpy.ndarray):\nWindow of EEG data.\n2D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>N_samples</code>)</p></li>\n<li><strong>option</strong> (str, <em>optional</em>):\nArtefact rejection option. Options include:\n<ul>\n<li>Nothing has been implemented yet.</li>\n<li>Default is <code>None</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>new_window</strong> (numpy.ndarray):\nArtefact rejected window of EEG data.\n2D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>N_samples</code>)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">window</span>, </span><span class=\"param\"><span class=\"n\">option</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"fullname": "bci_essentials.bci_data.EEG_data.package_resting_state_data", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.package_resting_state_data", "kind": "function", "doc": "<p>Package resting state data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: <code>self.rest_windows</code> is updated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.EEG_data.main": {"fullname": "bci_essentials.bci_data.EEG_data.main", "modulename": "bci_essentials.bci_data", "qualname": "EEG_data.main", "kind": "function", "doc": "<p>Main function of <code>EEG_data</code> class.</p>\n\n<p>Runs a while loop that reads in EEG data from the <code>EEG_data</code> object\nand processes it. Can be used in <code>online</code> or <code>offline</code> mode.</p>\n\n<ul>\n<li>If in <code>online</code> mode, then the loop will continuously try to read\nin data from the <code>EEG_data</code> object and process it. The loop will\nterminate when <code>max_loops</code> is reached, or when manually terminated.</li>\n<li>If in <code>offline</code> mode, then the loop will read in all of the data\nat once, process it, and then terminate.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>buffer</strong> (float, <em>optional</em>):\nBuffer time for EEG sampling in <code>online</code> mode (seconds).\n<ul>\n<li>Default is <code>0.01</code>.</li>\n</ul></li>\n<li><strong>eeg_start</strong> (int, <em>optional</em>):\nStart time for EEG sampling (seconds).\n<ul>\n<li>Default is <code>0</code>.</li>\n</ul></li>\n<li><strong>max_channels</strong> (int, <em>optional</em>):\nMaximum number of EEG channels to read in.\n<ul>\n<li>Default is <code>64</code>.</li>\n</ul></li>\n<li><strong>max_samples</strong> (int, <em>optional</em>):\nMaximum number of EEG samples to read in per window.\n<ul>\n<li>Default is <code>2560</code>.</li>\n</ul></li>\n<li><strong>max_windows</strong> (int, <em>optional</em>):\nMaximum number of windows to read in per loop (?).\n<ul>\n<li>Default is <code>1000</code>.</li>\n</ul></li>\n<li><strong>max_loops</strong> (int, <em>optional</em>):\nMaximum number of loops to run.\n<ul>\n<li>Default is <code>1000000</code>.</li>\n</ul></li>\n<li><strong>training</strong> (bool, <em>optional</em>):\nFlag to indicate if the data will be used to train a classifier.\n<ul>\n<li><code>True</code>: The data will be used to train the classifier.</li>\n<li><code>False</code>: The data will be used to predict with the classifier.</li>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>online</strong> (bool, <em>optional</em>):\nFlag to indicate if the data will be processed in <code>online</code> mode.\n<ul>\n<li><code>True</code>: The data will be processed in <code>online</code> mode.</li>\n<li><code>False</code>: The data will be processed in <code>offline</code> mode.</li>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>train_complete</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier has been trained.\n<ul>\n<li><code>True</code>: The classifier has been trained.</li>\n<li><code>False</code>: The classifier has not been trained.</li>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>iterative_training</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier will be updated iteratively.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>live_update</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier will be used to provide\nlive updates on window classification.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>print_markers</strong> (bool, <em>optional</em>):\nFlag to indicate if the markers will be printed to the console.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_training</strong> (bool, <em>optional</em>):\nFlag to indicate if the training progress will be printed to the\nconsole.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier fit will be printed to the\nconsole.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier performance will be printed\nto the console.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_predict</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier predictions will be printed\nto the console.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>pp_type</strong> (str, <em>optional</em>):\nPreprocessing method to apply to the EEG data.\n<ul>\n<li>Default is <code>\"bandpass\"</code>.</li>\n</ul></li>\n<li><strong>pp_low</strong> (int, <em>optional</em>):\nLow corner frequency for bandpass filter.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>pp_high</strong> (int, <em>optional</em>):\nUpper corner frequency for bandpass filter.\n<ul>\n<li>Default is <code>40</code>.</li>\n</ul></li>\n<li><strong>pp_order</strong> (int, <em>optional</em>):\nOrder of the bandpass filter.\n<ul>\n<li>Default is <code>5</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">eeg_start</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span><span class=\"o\">=</span><span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">max_samples</span><span class=\"o\">=</span><span class=\"mi\">2560</span>,</span><span class=\"param\">\t<span class=\"n\">max_windows</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">max_loops</span><span class=\"o\">=</span><span class=\"mi\">1000000</span>,</span><span class=\"param\">\t<span class=\"n\">training</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">online</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">train_complete</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">iterative_training</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">live_update</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">print_markers</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_training</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_predict</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">pp_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;bandpass&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">pp_low</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pp_high</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">pp_order</span><span class=\"o\">=</span><span class=\"mi\">5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.ERP_data": {"fullname": "bci_essentials.bci_data.ERP_data", "modulename": "bci_essentials.bci_data", "qualname": "ERP_data", "kind": "class", "doc": "<p>Class that holds, windows, processes and classifies ERP data.</p>\n\n<p>Above description needs to be verified.</p>\n", "bases": "EEG_data"}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"fullname": "bci_essentials.bci_data.ERP_data.mne_export_as_raw", "modulename": "bci_essentials.bci_data", "qualname": "ERP_data.mne_export_as_raw", "kind": "function", "doc": "<p>MNE export EEG as RawArray</p>\n\n<p>Exports the EEG data as a MNE RawArray object (or an epoch object?).</p>\n\n<p><strong>Requires MNE</strong></p>\n\n<p><strong>HAS NOT BEEN IMPLEMENTED YET.</strong></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>epochs_array</strong> (mne.io.RawArray):\nMNE RawArray object.</p>\n\n<p><strong>NOTE: NOT ACTUALLY THE CASE AT THE MOMENT</strong>.\nThis is what the code will return once it has been implemented.</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"fullname": "bci_essentials.bci_data.ERP_data.mne_export_as_epochs", "modulename": "bci_essentials.bci_data", "qualname": "ERP_data.mne_export_as_epochs", "kind": "function", "doc": "<p>MNE export EEG as EpochsArray.</p>\n\n<p>Exports the EEG data as a MNE EpochsArray object.</p>\n\n<p><strong>Requires MNE</strong></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>epochs_array</strong> (mne.EpochsArray):\nMNE EpochsArray object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"fullname": "bci_essentials.bci_data.ERP_data.mne_export_as_evoked", "modulename": "bci_essentials.bci_data", "qualname": "ERP_data.mne_export_as_evoked", "kind": "function", "doc": "<p>MNE Export evoked EEG data as EpochsArray.</p>\n\n<p>Exports the evoked EEG data as a MNE EpochsArray object.</p>\n\n<p><strong>Requires MNE</strong></p>\n\n<p><strong>HAS NOT BEEN IMPLEMENTED YET.</strong></p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>evoked_array</strong> (mne.EpochsArray):\nMNE EpochsArray object.</p>\n\n<p><strong>NOTE: NOT ACTUALLY THE CASE AT THE MOMENT</strong>.\nThis is what the code will return once it has been implemented.</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.bci_data.ERP_data.main": {"fullname": "bci_essentials.bci_data.ERP_data.main", "modulename": "bci_essentials.bci_data", "qualname": "ERP_data.main", "kind": "function", "doc": "<p>Main function of <code>ERP_data</code> class.</p>\n\n<p>Formats the ERP data. Call this every time that a new chunk arrives.</p>\n\n<p>Runs a while loop that reads in ERP windows from the <code>ERP_data</code>\nobject and processes decision blocks. Can be used in <code>online</code> or\noffline mode.</p>\n\n<ul>\n<li>If in <code>online</code> mode, then the loop will continuously try to read\nin data from the <code>EEG_data</code> object and process it. The loop will\nterminate when <code>max_loops</code> is reached, or when manually terminated.</li>\n<li>If in <code>offline</code> mode, then the loop will read in all of the data\nat once, process it, and then terminate.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>window_start</strong> (float, <em>optional</em>):\nStart time for ERP sampling window relative to marker (seconds).\n<ul>\n<li>Default is <code>0.0</code>.</li>\n</ul></li>\n<li><strong>window_end</strong> (float, <em>optional</em>):\nEnd time for ERP sampling window relative to marker (seconds).\n<ul>\n<li>Default is <code>0.8</code>.</li>\n</ul></li>\n<li><strong>eeg_start</strong> (int, <em>optional</em>):\nStart time for EEG sampling (seconds).\n<ul>\n<li>Default is <code>0</code>.</li>\n</ul></li>\n<li><strong>buffer</strong> (float, <em>optional</em>):\nBuffer time for EEG sampling in <code>online</code> mode (seconds).\n<ul>\n<li>Default is <code>0.01</code>.</li>\n</ul></li>\n<li><strong>max_num_options</strong> (int, <em>optional</em>):\nMaximum number of stimulus options (?).\n<ul>\n<li>Default is <code>64</code>.</li>\n</ul></li>\n<li><strong>max_windows_per_option</strong> (int, <em>optional</em>):\nMaximum number of windows to read in per stimulus option (?).\n<ul>\n<li>Default is <code>50</code>.</li>\n</ul></li>\n<li><strong>max_windows</strong> (int, <em>optional</em>):\nMaximum number of windows to read in per loop (?).\n<ul>\n<li>Default is <code>1000</code>.</li>\n</ul></li>\n<li><strong>max_decisions</strong> (int, <em>optional</em>):\nMaximum number of ERP decision blocks to store per loop (?).\n<ul>\n<li>Default is <code>500</code>.</li>\n</ul></li>\n<li><strong>max_loops</strong> (int, <em>optional</em>):\nMaximum number of loops to run.\n<ul>\n<li>Default is <code>1000000</code>.</li>\n</ul></li>\n<li><strong>training</strong> (bool, <em>optional</em>):\nFlag to indicate if the data will be used to train a classifier.\n<ul>\n<li><code>True</code>: The data will be used to train the classifier.</li>\n<li><code>False</code>: The data will be used to predict with the classifier.</li>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>online</strong> (bool, <em>optional</em>):\nFlag to indicate if the data will be processed in <code>online</code> mode.\n<ul>\n<li><code>True</code>: The data will be processed in <code>online</code> mode.</li>\n<li><code>False</code>: The data will be processed in <code>offline</code> mode.</li>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_markers</strong> (bool, <em>optional</em>):\nFlag to indicate if the markers will be printed to the console.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_training</strong> (bool, <em>optional</em>):\nFlag to indicate if the training progress will be printed to the\nconsole.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier fit will be printed to the\nconsole.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier performance will be printed\nto the console.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_predict</strong> (bool, <em>optional</em>):\nFlag to indicate if the classifier predictions will be printed\nto the console.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>pp_type</strong> (str, <em>optional</em>):\nPreprocessing method to apply to the EEG data.\n<ul>\n<li>Default is <code>\"bandpass\"</code>.</li>\n</ul></li>\n<li><strong>pp_low</strong> (int, <em>optional</em>):\nLow corner frequency for bandpass filter.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>pp_high</strong> (int, <em>optional</em>):\nUpper corner frequency for bandpass filter.\n<ul>\n<li>Default is <code>40</code>.</li>\n</ul></li>\n<li><strong>pp_order</strong> (int, <em>optional</em>):\nOrder of the bandpass filter.\n<ul>\n<li>Default is <code>5</code>.</li>\n</ul></li>\n<li><strong>plot_erp</strong> (bool, <em>optional</em>):\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">window_start</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">window_end</span><span class=\"o\">=</span><span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">eeg_start</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_options</span><span class=\"o\">=</span><span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">max_windows_per_option</span><span class=\"o\">=</span><span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">max_windows</span><span class=\"o\">=</span><span class=\"mi\">10000</span>,</span><span class=\"param\">\t<span class=\"n\">max_decisions</span><span class=\"o\">=</span><span class=\"mi\">500</span>,</span><span class=\"param\">\t<span class=\"n\">max_loops</span><span class=\"o\">=</span><span class=\"mi\">1000000000</span>,</span><span class=\"param\">\t<span class=\"n\">training</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">online</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">print_markers</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_training</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_predict</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">pp_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;bandpass&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">pp_low</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pp_high</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">pp_order</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">plot_erp</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.channel_selection": {"fullname": "bci_essentials.channel_selection", "modulename": "bci_essentials.channel_selection", "kind": "module", "doc": "<p>This module includes functions for selecting channels in order to\nimprove BCI performance.</p>\n\n<p>The EEG data input for each function is a set of windows. The data must\nbe of the shape <code>W x C x S</code>, where:</p>\n\n<ul>\n<li>W = number of windows</li>\n<li>C = number of channels</li>\n<li>S = number of samples</li>\n</ul>\n"}, "bci_essentials.channel_selection.channel_selection_by_method": {"fullname": "bci_essentials.channel_selection.channel_selection_by_method", "modulename": "bci_essentials.channel_selection", "qualname": "channel_selection_by_method", "kind": "function", "doc": "<p>Passes the BCI kernel function into a wrapper defined by <code>method</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kernel_func</strong> (function):\nThe classification kernel function which does feature extraction\nand classification.\nDifferent functions  are used for MI, P300, SSVEP, etc.</li>\n<li><p><strong>X</strong> (numpy.ndarray):\nTraining data for the classifier as windows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><p><strong>y</strong> (numpy.ndarray):\nTraining labels for the classifier.\n1D array.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>):\nThe set of channel labels corresponding to <code>C_channels</code>.\nA list of strings with length = <code>C_channels</code>.</li>\n<li><strong>method = str, <em>optional</em></strong>: The wrapper method. Options are <code>\"SBS\"</code> or <code>\"SBFS\"</code>.\n<ul>\n<li>Default is <code>\"SBS\"</code>.</li>\n</ul></li>\n<li><strong>metric</strong> (str, <em>optional</em>):\nThe metric used to measure the \"goodness\" of the trained classifier.\n<ul>\n<li>Default is <code>\"accuracy\"</code>.</li>\n</ul></li>\n<li><strong>initial_channels</strong> (list of <code>str</code>, <em>optional</em>):\nInitial guess of channels.\n<ul>\n<li>Defaults is <code>[]</code>. Assigns an empty set for forward selections,\nand a full set for backward selections.</li>\n</ul></li>\n<li><strong>max_time</strong> (int, <em>optional</em>):\nThe maxiumum amount of time, in seconds, that the function will\nsearch for the optimal solution.\n<ul>\n<li>Default is <code>999</code> seconds.</li>\n</ul></li>\n<li><strong>min_channels</strong> (int, <em>optional</em>):\nThe minimum number of channels.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>max_channels</strong> (int, <em>optional</em>):\nThe maximum number of channels.\n<ul>\n<li>Default is <code>999</code>.</li>\n</ul></li>\n<li><strong>performance_delta</strong> (float, <em>optional</em>):\nThe performance delta under which the algorithm is considered to\nbe close enough to optimal.\n<ul>\n<li>Default is <code>0.001</code>.</li>\n</ul></li>\n<li><strong>n_jobs</strong> (int, <em>optional</em>):\nThe number of threads to dedicate to this calculation.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>print_output</strong> (str, <em>optional</em>):\nFlag on whether or not to print output. Options are:\n<ul>\n<li><code>\"verbose\"</code>: Print output at each step.</li>\n<li><code>\"final\"</code>: Print output at the end.</li>\n<li><code>\"silent\"</code>: No output.</li>\n<li>Default is <code>\"silent\"</code>.</li>\n</ul></li>\n<li><strong>record_performance</strong> (bool, <em>optional</em>):\nWhether or not to record the performance of the channel selection\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_channel_subset</strong> (list of <code>str</code>):\nThe new best channel subset from the list of <code>channel_labels</code>.</li>\n<li><strong>self.clf</strong> (classifier):\nThe trained classification model.</li>\n<li><p><strong>preds</strong> (numpy.ndarray):\nThe predictions from the model.\n1D array with the same shape as <code>y</code>.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>accuracy</strong> (float):\nThe accuracy of the trained classification model.</li>\n<li><strong>precision</strong> (float):\nThe precision of the trained classification model.</li>\n<li><strong>recall</strong> (float):\nThe recall of the trained classification model.</li>\n<li><strong>results_df</strong> (pandas.DataFrame):\nThe dataframe containing the results of each step of channel selection.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kernel_func</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;SBS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;accuracy&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">initial_channels</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span><span class=\"o\">=</span><span class=\"mi\">999</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span><span class=\"o\">=</span><span class=\"mi\">999</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span><span class=\"o\">=</span><span class=\"s1\">&#39;silent&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">record_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.channel_selection.check_stopping_criterion": {"fullname": "bci_essentials.channel_selection.check_stopping_criterion", "modulename": "bci_essentials.channel_selection", "qualname": "check_stopping_criterion", "kind": "function", "doc": "<p>Function to check if a stopping criterion has been met.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>current_time</strong> (float):\nThe time elapsed since the start of the channel selection method.</li>\n<li><strong>nchannels</strong> (int):\nThe number of channels in the current iteration of the new best channel\nsubset (<code>len(new_channel_subset)</code>).</li>\n<li><strong>current_performance_delta</strong> (float):\nThe performance delta between the current iteration and the previous.</li>\n<li><strong>max_time</strong> (int):\nThe maxiumum amount of time, in seconds, that the function will\nsearch for the optimal solution.</li>\n<li><strong>min_channels</strong> (int):\nThe minimum number of channels.</li>\n<li><strong>max_channels</strong> (int):\nThe maximum number of channels.</li>\n<li><strong>performance_delta</strong> (float):\nThe performance delta under which the algorithm is considered to\nbe close enough to optimal.</li>\n<li><strong>print_output</strong> (str):\nFlag on whether or not to print output. Options are:\n<ul>\n<li><code>\"verbose\"</code>: Print output at each step.</li>\n<li><code>\"final\"</code>: Print output at the end.</li>\n<li><code>\"silent\"</code>: No output.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><em>bool</em></strong>: Has stopping criterion been met (<code>True</code>) or not (<code>False</code>).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">current_time</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span>,</span><span class=\"param\">\t<span class=\"n\">current_performance_delta</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.channel_selection.sfs": {"fullname": "bci_essentials.channel_selection.sfs", "modulename": "bci_essentials.channel_selection", "qualname": "sfs", "kind": "function", "doc": "<p>The Sequential Forward Selection (SFS) method for channel selection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kernel_func</strong> (function):\nThe classification kernel function which does feature extraction\nand classification.\nDifferent functions  are used for MI, P300, SSVEP, etc.</li>\n<li><p><strong>X</strong> (numpy.ndarray):\nTraining data for the classifier as windows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><p><strong>y</strong> (numpy.ndarray):\nTraining labels for the classifier.\n1D array.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>):\nThe set of channel labels corresponding to <code>C_channels</code>.\nA list of strings with length = <code>C_channels</code>.</li>\n<li><strong>metric</strong> (str):\nThe metric used to measure the \"goodness\" of the trained classifier.</li>\n<li><strong>initial_channels</strong> (list of <code>str</code>):\nInitial guess of channels.</li>\n<li><strong>max_time</strong> (int):\nThe maxiumum amount of time, in seconds, that the function will\nsearch for the optimal solution.</li>\n<li><strong>min_channels</strong> (int):\nThe minimum number of channels.</li>\n<li><strong>max_channels</strong> (int):\nThe maximum number of channels.</li>\n<li><strong>performance_delta</strong> (float):\nThe performance delta under which the algorithm is considered to\nbe close enough to optimal.</li>\n<li><strong>n_jobs</strong> (int):\nThe number of threads to dedicate to this calculation.</li>\n<li><strong>print_output</strong> (str):\nFlag on whether or not to print output. Options are:\n<ul>\n<li><code>\"verbose\"</code>: Print output at each step.</li>\n<li><code>\"final\"</code>: Print output at the end.</li>\n<li><code>\"silent\"</code>: No output.</li>\n</ul></li>\n<li><strong>record_performance</strong> (bool):\nFlag on whether or not to record performance at each step.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_channel_subset</strong> (list of <code>str</code>):\nThe new best channel subset from the list of <code>channel_labels</code>.</li>\n<li><strong>self.clf</strong> (classifier):\nThe trained classification model.</li>\n<li><p><strong>preds</strong> (numpy.ndarray):\nThe predictions from the model.\n1D array with the same shape as <code>y</code>.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>accuracy</strong> (float):\nThe accuracy of the trained classification model.</li>\n<li><strong>precision</strong> (float):\nThe precision of the trained classification model.</li>\n<li><strong>recall</strong> (float):\nThe recall of the trained classification model.</li>\n<li><strong>results_df</strong> (pandas.DataFrame):\nThe dataframe containing the results of each step of channel selection.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kernel_func</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span>,</span><span class=\"param\">\t<span class=\"n\">initial_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span>,</span><span class=\"param\">\t<span class=\"n\">record_performance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.channel_selection.sbs": {"fullname": "bci_essentials.channel_selection.sbs", "modulename": "bci_essentials.channel_selection", "qualname": "sbs", "kind": "function", "doc": "<p>The Sequential Backward Selection (SBS) method for channel selection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kernel_func</strong> (function):\nThe classification kernel function which does feature extraction\nand classification.\nDifferent functions  are used for MI, P300, SSVEP, etc.</li>\n<li><p><strong>X</strong> (numpy.ndarray):\nTraining data for the classifier as windows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><p><strong>y</strong> (numpy.ndarray):\nTraining labels for the classifier.\n1D array.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>):\nThe set of channel labels corresponding to <code>C_channels</code>.\nA list of strings with length = <code>C_channels</code>.</li>\n<li><strong>metric</strong> (str):\nThe metric used to measure the \"goodness\" of the trained classifier.</li>\n<li><strong>initial_channels</strong> (list of <code>str</code>):\nInitial guess of channels.</li>\n<li><strong>max_time</strong> (int):\nThe maxiumum amount of time, in seconds, that the function will\nsearch for the optimal solution.</li>\n<li><strong>min_channels</strong> (int):\nThe minimum number of channels.</li>\n<li><strong>max_channels</strong> (int):\nThe maximum number of channels.</li>\n<li><strong>performance_delta</strong> (float):\nThe performance delta under which the algorithm is considered to\nbe close enough to optimal.</li>\n<li><strong>n_jobs</strong> (int):\nThe number of threads to dedicate to this calculation.</li>\n<li><strong>print_output</strong> (str):\nFlag on whether or not to print output. Options are:\n<ul>\n<li><code>\"verbose\"</code>: Print output at each step.</li>\n<li><code>\"final\"</code>: Print output at the end.</li>\n<li><code>\"silent\"</code>: No output.</li>\n</ul></li>\n<li><strong>record_performance</strong> (bool):\nFlag on whether or not to record performance metrics at each step.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_channel_subset</strong> (list of <code>str</code>):\nThe new best channel subset from the list of <code>channel_labels</code>.</li>\n<li><strong>self.clf</strong> (classifier):\nThe trained classification model.</li>\n<li><p><strong>preds</strong> (numpy.ndarray):\nThe predictions from the model.\n1D array with the same shape as <code>y</code>.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>accuracy</strong> (float):\nThe accuracy of the trained classification model.</li>\n<li><strong>precision</strong> (float):\nThe precision of the trained classification model.</li>\n<li><strong>recall</strong> (float):\nThe recall of the trained classification model.</li>\n<li><strong>results_df</strong> (pandas.DataFrame):\nA dataframe containing the performance metrics at each step.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kernel_func</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span>,</span><span class=\"param\">\t<span class=\"n\">initial_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span>,</span><span class=\"param\">\t<span class=\"n\">record_performance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.channel_selection.sbfs": {"fullname": "bci_essentials.channel_selection.sbfs", "modulename": "bci_essentials.channel_selection", "qualname": "sbfs", "kind": "function", "doc": "<p>The Sequential Backward Floating Selection (SBFS) method for channel selection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kernel_func</strong> (function):\nThe classification kernel function which does feature extraction\nand classification.\nDifferent functions  are used for MI, P300, SSVEP, etc.</li>\n<li><p><strong>X</strong> (numpy.ndarray):\nTraining data for the classifier as windows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><p><strong>y</strong> (numpy.ndarray):\nTraining labels for the classifier.\n1D array.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>):\nThe set of channel labels corresponding to <code>C_channels</code>.\nA list of strings with length = <code>C_channels</code>.</li>\n<li><strong>metric</strong> (str):\nThe metric used to measure the \"goodness\" of the trained classifier.</li>\n<li><strong>initial_channels</strong> (list of <code>str</code>):\nInitial guess of channels.</li>\n<li><strong>max_time</strong> (int):\nThe maxiumum amount of time, in seconds, that the function will\nsearch for the optimal solution.</li>\n<li><strong>min_channels</strong> (int):\nThe minimum number of channels.</li>\n<li><strong>max_channels</strong> (int):\nThe maximum number of channels.</li>\n<li><strong>performance_delta</strong> (float):\nThe performance delta under which the algorithm is considered to\nbe close enough to optimal.</li>\n<li><strong>n_jobs</strong> (int):\nThe number of threads to dedicate to this calculation.</li>\n<li><strong>print_output</strong> (str):\nFlag on whether or not to print output. Options are:\n<ul>\n<li><code>\"verbose\"</code>: Print output at each step.</li>\n<li><code>\"final\"</code>: Print output at the end.</li>\n<li><code>\"silent\"</code>: No output.</li>\n</ul></li>\n<li><strong>record_performance</strong> (bool):\nFlag on whether or not to record performance metrics at each step.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_channel_subset</strong> (list of <code>str</code>):\nThe new best channel subset from the list of <code>channel_labels</code>.</li>\n<li><strong>self.clf</strong> (classifier):\nThe trained classification model.</li>\n<li><p><strong>preds</strong> (numpy.ndarray):\nThe predictions from the model.\n1D array with the same shape as <code>y</code>.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>accuracy</strong> (float):\nThe accuracy of the trained classification model.</li>\n<li><strong>precision</strong> (float):\nThe precision of the trained classification model.</li>\n<li><strong>recall</strong> (float):\nThe recall of the trained classification model.</li>\n<li><strong>results_df</strong> (pandas.DataFrame):\nA dataframe containing the performance metrics at each step.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kernel_func</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span>,</span><span class=\"param\">\t<span class=\"n\">initial_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span>,</span><span class=\"param\">\t<span class=\"n\">record_performance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.channel_selection.sffs": {"fullname": "bci_essentials.channel_selection.sffs", "modulename": "bci_essentials.channel_selection", "qualname": "sffs", "kind": "function", "doc": "<p>The Sequential Forward Floating Selection (SFFS) method for channel selection.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kernel_func</strong> (function):\nThe classification kernel function which does feature extraction\nand classification.\nDifferent functions  are used for MI, P300, SSVEP, etc.</li>\n<li><p><strong>X</strong> (numpy.ndarray):\nTraining data for the classifier as windows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><p><strong>y</strong> (numpy.ndarray):\nTraining labels for the classifier.\n1D array.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>):\nThe set of channel labels corresponding to <code>C_channels</code>.\nA list of strings with length = <code>C_channels</code>.</li>\n<li><strong>metric</strong> (str):\nThe metric used to measure the \"goodness\" of the trained classifier.</li>\n<li><strong>initial_channels</strong> (list of <code>str</code>):\nInitial guess of channels.</li>\n<li><strong>max_time</strong> (int):\nThe maxiumum amount of time, in seconds, that the function will\nsearch for the optimal solution.</li>\n<li><strong>min_channels</strong> (int):\nThe minimum number of channels.</li>\n<li><strong>max_channels</strong> (int):\nThe maximum number of channels.</li>\n<li><strong>performance_delta</strong> (float):\nThe performance delta under which the algorithm is considered to\nbe close enough to optimal.</li>\n<li><strong>n_jobs</strong> (int):\nThe number of threads to dedicate to this calculation.</li>\n<li><strong>print_output</strong> (str):\nFlag on whether or not to print output. Options are:\n<ul>\n<li><code>\"verbose\"</code>: Print output at each step.</li>\n<li><code>\"final\"</code>: Print output at the end.</li>\n<li><code>\"silent\"</code>: No output.</li>\n</ul></li>\n<li><strong>record_performance</strong> (bool):\nFlag on whether or not to record performance metrics at each step.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_channel_subset</strong> (list of <code>str</code>):\nThe new best channel subset from the list of <code>channel_labels</code>.</li>\n<li><strong>self.clf</strong> (classifier):\nThe trained classification model.</li>\n<li><p><strong>preds</strong> (numpy.ndarray):\nThe predictions from the model.\n1D array with the same shape as <code>y</code>.</p>\n\n<p>shape = (<code>nwindows</code>)</p></li>\n<li><strong>accuracy</strong> (float):\nThe accuracy of the trained classification model.</li>\n<li><strong>precision</strong> (float):\nThe precision of the trained classification model.</li>\n<li><strong>recall</strong> (float):\nThe recall of the trained classification model.</li>\n<li><strong>results_df</strong> (pandas.DataFrame):\nA dataframe containing the performance metrics at each step.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kernel_func</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span>,</span><span class=\"param\">\t<span class=\"n\">initial_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span>,</span><span class=\"param\">\t<span class=\"n\">record_performance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification": {"fullname": "bci_essentials.classification", "modulename": "bci_essentials.classification", "kind": "module", "doc": "<h6 id=\"classifiers\">Classifiers</h6>\n\n<p>Compendium of classifiers for BCI applications.</p>\n\n<p><strong>Excluded from <code>flake8</code> rules to avoid unused import errors</strong></p>\n"}, "bci_essentials.classification.erp_rg_classifier": {"fullname": "bci_essentials.classification.erp_rg_classifier", "modulename": "bci_essentials.classification.erp_rg_classifier", "kind": "module", "doc": "<p><strong>ERP RG Classifier</strong></p>\n\n<p>This classifier is used to classify ERPs using the Riemannian Geometry\napproach.</p>\n"}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"fullname": "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier", "modulename": "bci_essentials.classification.erp_rg_classifier", "qualname": "ERP_rg_classifier", "kind": "class", "doc": "<p>ERP RG Classifier class (<em>inherits from <code>Generic_classifier</code></em>).</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"fullname": "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings", "modulename": "bci_essentials.classification.erp_rg_classifier", "qualname": "ERP_rg_classifier.set_p300_clf_settings", "kind": "function", "doc": "<p>Set P300 Classifier Settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, <em>optional</em>):\nNumber of folds for cross-validation.\n<ul>\n<li>Default is <code>3</code>.</li>\n</ul></li>\n<li><strong>lico_expansion_factor</strong> (int, <em>optional</em>):\nLinear Combination Oversampling expansion factor, which is the\nfactor by which the number of ERPs in the training set will be\nexpanded.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>oversample_ratio</strong> (float, <em>optional</em>):\nTraditional oversampling. Range is from from 0.1-1 resulting\nfrom the ratio of erp to non-erp class. 0 for no oversampling.\n<ul>\n<li>Default is <code>0</code>.</li>\n</ul></li>\n<li><strong>undersample_ratio</strong> (float, <em>optional</em>):\nTraditional undersampling. Range is from from 0.1-1 resulting\nfrom the ratio of erp to non-erp class. 0 for no undersampling.\n<ul>\n<li>Default is <code>0</code>.</li>\n</ul></li>\n<li><strong>random_seed</strong> (int, <em>optional</em>):\nRandom seed.\n<ul>\n<li>Default is <code>42</code>.</li>\n</ul></li>\n<li><strong>covariance_estimator</strong> (str, <em>optional</em>):\nCovariance estimator. See pyriemann Covariances.\n<ul>\n<li>Default is <code>\"scm\"</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">lico_expansion_factor</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">oversample_ratio</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">undersample_ratio</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">covariance_estimator</span><span class=\"o\">=</span><span class=\"s1\">&#39;scm&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"fullname": "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train", "modulename": "bci_essentials.classification.erp_rg_classifier", "qualname": "ERP_rg_classifier.add_to_train", "kind": "function", "doc": "<p>Add to training set.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>decision_block</strong> (numpy.ndarray):\nDescription of parameter <code>decision block</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>label_idx</strong> (type):\nDescription of parameter <code>label_idx</code>.</li>\n<li><strong>print_training</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_training</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">decision_block</span>, </span><span class=\"param\"><span class=\"n\">label_idx</span>, </span><span class=\"param\"><span class=\"n\">print_training</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"fullname": "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit", "modulename": "bci_essentials.classification.erp_rg_classifier", "qualname": "ERP_rg_classifier.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, <em>optional</em>):\nDescription of parameter <code>n_splits</code>.\n<ul>\n<li>Default is <code>2</code>.</li>\n</ul></li>\n<li><strong>plot_cm</strong> (bool, <em>optional</em>):\nDescription of parameter <code>plot_cm</code>.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>plot_roc</strong> (bool, <em>optional</em>):\nDescription of parameter <code>plot_roc</code>.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>lico_expansion_factor</strong> (int, <em>optional</em>):\nDescription of parameter <code>lico_expansion_factor</code>.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>predict()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">plot_cm</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">plot_roc</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">lico_expansion_factor</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.generic_classifier": {"fullname": "bci_essentials.classification.generic_classifier", "modulename": "bci_essentials.classification.generic_classifier", "kind": "module", "doc": "<p><strong>Generic classifier class for BCI Essentials</strong></p>\n\n<p>Used as Parent classifier class for other classifiers.</p>\n"}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier", "kind": "class", "doc": "<p>The base generic classifier class for other classifiers.</p>\n"}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.__init__", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.__init__", "kind": "function", "doc": "<p>Initializes <code>Generic_classifier</code> class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>training_selection</strong> (type, <em>optional</em>):\nDescription of parameter <code>training_selection</code>.\n<ul>\n<li>Default is <code>0</code>.</li>\n</ul></li>\n<li><strong>subset</strong> (list of <code>type</code>, <em>optional</em>):\nDescription of parameter <code>subset</code>.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nDescription of attribute <code>X</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p>\n\n<ul>\n<li>Initial value is <code>np.ndarray([0])</code>.</li>\n</ul></li>\n<li><p><strong>y</strong> (numpy.ndarray):\nDescription of attribute <code>y</code>.\nIf array, state size and type. E.g.\n1D array containing data with <code>int</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,)</p>\n\n<ul>\n<li>Initial value is <code>np.ndarray([0])</code>.</li>\n</ul></li>\n<li><strong>subset_defined</strong> (bool):\nDescription of attribute <code>subset_defined</code>.\n<ul>\n<li>Initial value is <code>False</code>.</li>\n</ul></li>\n<li><strong>subset</strong> (list of <code>type</code>):\nDescription of attribute <code>subset</code>.\n<ul>\n<li>Initial value is parameter <code>subset</code>.</li>\n</ul></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>):\nDescription of attribute <code>channel_labels</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n<li><strong>channel_selection_setup</strong> (bool):\nDescription of attribute <code>channel_selection_setup</code>.\n<ul>\n<li>Initial value is <code>False</code>.</li>\n</ul></li>\n<li><strong>offline_accuracy</strong> (list of <code>float</code>):\nDescription of attribute <code>offline_accuracy</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n<li><strong>offline_precision</strong> (list of <code>float</code>):\nDescription of attribute <code>offline_precision</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n<li><strong>offline_recall</strong> (list of <code>float</code>):\nDescription of attribute <code>offline_recall</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n<li><strong>offline_window_count</strong> (int):\nDescription of attribute <code>offline_window_count</code>.\n<ul>\n<li>Initial value is <code>0</code>.</li>\n</ul></li>\n<li><strong>offline_window_counts</strong> (list of <code>int</code>):\nDescription of attribute <code>offline_window_counts</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n<li><strong>next_fit_window</strong> (int):\nDescription of attribute <code>next_fit_window</code>.\n<ul>\n<li>Initial value is <code>0</code>.</li>\n</ul></li>\n<li><strong>predictions</strong> (list of <code>type</code>):\nDescription of attribute <code>predictions</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n<li><strong>pred_probas</strong> (list of <code>float</code>):\nDescription of attribute <code>pred_probas</code>.\n<ul>\n<li>Initial value is <code>[]</code>.</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">training_selection</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[]</span></span>)</span>"}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.get_subset", "kind": "function", "doc": "<p>Get a subset of X according to labels or indices.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray, <em>optional</em>):\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_windows</code>,<code>M_channels</code>,<code>P_samples</code>)</p>\n\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n<li><strong>subset</strong> (list of <code>int</code> or <code>str</code>, <em>optional</em>):\nList of indices (int) or labels (str) of the desired channels.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n<li><strong>channel_labels</strong> (list of <code>str</code>, <em>optional</em>):\nChannel labels from the entire EEG montage.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nSubset of input <code>X</code> according to labels or indices.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_windows</code>,<code>M_channels</code>,<code>P_samples</code>)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">channel_labels</span><span class=\"o\">=</span><span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.setup_channel_selection", "kind": "function", "doc": "<p>Setup channel selection parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>method</strong> (str, <em>optional</em>):\nThe method used to add or remove channels.\n<ul>\n<li>Default is <code>\"SBS\"</code>.</li>\n</ul></li>\n<li><strong>metric</strong> (str, <em>optional</em>):\nThe metric used to measure performance.\n<ul>\n<li>Default is <code>\"accuracy\"</code>.</li>\n</ul></li>\n<li><strong>iterative_selection</strong> (bool, <em>optional</em>):\nWhether or not to use the previously selected subset for the initial subset.\nDefault is <code>False</code>.</li>\n<li><strong>initial_channels</strong> (type, <em>optional</em>):\nDescription of parameter <code>initial_channels</code>.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n<li><strong>max_time</strong> (type, <em>optional</em>):\nDescription of parameter <code>max_time</code>.\n<ul>\n<li>Default is <code>999</code>.</li>\n</ul></li>\n<li><strong>min_channels</strong> (type, <em>optional</em>):\nDescription of parameter <code>min_channels</code>.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><strong>max_channels</strong> (type, <em>optional</em>):\nDescription of parameter <code>max_channels</code>.\n<ul>\n<li>Default is <code>999</code>.</li>\n</ul></li>\n<li><strong>performance_delta</strong> (type, <em>optional</em>):\nDescription of parameter <code>performance_delta</code>.\n<ul>\n<li>Default is <code>0.001</code>.</li>\n</ul></li>\n<li><strong>n_jobs</strong> (int, <em>optional</em>):\nThe number of threads to dedicate to this calculation.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n<li><p><strong>print_output</strong> (string, <em>optional</em>):\nDecides what to print to command line. The output settings are:</p>\n\n<ul>\n<li><code>silent</code>: no messages</li>\n<li><code>final</code>: final selected channels and performance</li>\n<li><p><code>verbose</code>: verbose (everything).</p></li>\n<li><p>Default is <code>\"silent\"</code>.</p></li>\n</ul></li>\n<li><strong>record_performance</strong> (bool, <em>optional</em>):\nDecides whether or not to record performance of channel selection.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;SBS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;accuracy&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">iterative_selection</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial_channels</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">max_time</span><span class=\"o\">=</span><span class=\"mi\">999</span>,</span><span class=\"param\">\t<span class=\"n\">min_channels</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span><span class=\"o\">=</span><span class=\"mi\">999</span>,</span><span class=\"param\">\t<span class=\"n\">performance_delta</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">print_output</span><span class=\"o\">=</span><span class=\"s1\">&#39;silent&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">record_performance</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.add_to_train", "kind": "function", "doc": "<p>Add training data to the training set using a decision block\nand a label.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>decision block</strong> (type):\nDescription of parameter <code>decision block</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>labels</strong> (type):\nDescription of parameter <code>labels</code>.</li>\n<li><strong>num_options</strong> (type, <em>optional</em>):\nDescription of parameter <code>num_options</code>.\n<ul>\n<li>Default is <code>0</code>.</li>\n</ul></li>\n<li><strong>meta</strong> (type, <em>optional</em>):\nDescription of parameter <code>meta</code>.\n<ul>\n<li>Default is <code>[]</code>.</li>\n</ul></li>\n<li><strong>print_training</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_training</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">decision_block</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span>,</span><span class=\"param\">\t<span class=\"n\">num_options</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">meta</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">print_training</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.predict_decision_block", "kind": "function", "doc": "<p>Predict a label based on a decision block.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>decision block</strong> (type):\nDescription of parameter <code>decision block</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>first_dimension</code>,<code>second_dimension</code>,<code>third_dimension</code>)</p></li>\n<li><strong>print_predict</strong> (type, <em>optional</em>):\nDescription of parameter <code>print_predict</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>prediction</strong> (type):\nDescription of returned object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">decision_block</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.fit", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.fit", "kind": "function", "doc": "<p>Abstract method to fit classifier</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**kwargs</strong> (dict, <em>optional</em>):\nDescription of extra arguments to pass to the method.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"fullname": "bci_essentials.classification.generic_classifier.Generic_classifier.predict", "modulename": "bci_essentials.classification.generic_classifier", "qualname": "Generic_classifier.predict", "kind": "function", "doc": "<p>Abstract method to predict with classifier</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**kwargs</strong> (dict, <em>optional</em>):\nDescription of extra arguments to pass to the method.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.mi_classifier": {"fullname": "bci_essentials.classification.mi_classifier", "modulename": "bci_essentials.classification.mi_classifier", "kind": "module", "doc": "<p><strong>MI Classifier</strong></p>\n\n<p>This classifier is used to classify MI data.</p>\n"}, "bci_essentials.classification.mi_classifier.MI_classifier": {"fullname": "bci_essentials.classification.mi_classifier.MI_classifier", "modulename": "bci_essentials.classification.mi_classifier", "qualname": "MI_classifier", "kind": "class", "doc": "<p>MI Classifier class (<em>inherits from <code>Generic_classifier</code></em>).</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"fullname": "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings", "modulename": "bci_essentials.classification.mi_classifier", "qualname": "MI_classifier.set_mi_classifier_settings", "kind": "function", "doc": "<p>Set MI classifier settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, <em>optional</em>):\nNumber of folds for cross-validation.\n<ul>\n<li>Default is <code>5</code>.</li>\n</ul></li>\n<li><strong>type</strong> (str, <em>optional</em>):\nDescription of parameter <code>type</code>.\n<ul>\n<li>Default is <code>\"TS\"</code>.</li>\n</ul></li>\n<li><strong>remove_flats</strong> (bool, <em>optional</em>):\nDescription of parameter <code>remove_flats</code>.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>whitening</strong> (bool, <em>optional</em>):\nDescription of parameter <code>whitening</code>.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n<li><strong>covariance_estimator</strong> (str, <em>optional</em>):\nCovariance estimator. See pyriemann Covariances.\n<ul>\n<li>Default is <code>\"scm\"</code>.</li>\n</ul></li>\n<li><strong>artifact_rejection</strong> (str, <em>optional</em>):\nDescription of parameter <code>artifact_rejection</code>.\n<ul>\n<li>Default is <code>\"none\"</code>.</li>\n</ul></li>\n<li><strong>channel_selection</strong> (str, <em>optional</em>):\nDescription of parameter <code>channel_selection</code>.\n<ul>\n<li>Default is <code>\"none\"</code>.</li>\n</ul></li>\n<li><strong>pred_threshold</strong> (float, <em>optional</em>):\nDescription of parameter <code>pred_threshold</code>.\n<ul>\n<li>Default is <code>0.5</code>.</li>\n</ul></li>\n<li><strong>random_seed</strong> (int, <em>optional</em>):\nRandom seed.\n<ul>\n<li>Default is <code>42</code>.</li>\n</ul></li>\n<li><strong>n_jobs</strong> (int, <em>optional</em>):\nThe number of threads to dedicate to this calculation.\n<ul>\n<li>Default is <code>1</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created are used in <code>fit()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">&#39;TS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">remove_flats</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">whitening</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">covariance_estimator</span><span class=\"o\">=</span><span class=\"s1\">&#39;scm&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">artifact_rejection</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">channel_selection</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">pred_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"fullname": "bci_essentials.classification.mi_classifier.MI_classifier.fit", "modulename": "bci_essentials.classification.mi_classifier", "qualname": "MI_classifier.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>predict()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"fullname": "bci_essentials.classification.mi_classifier.MI_classifier.predict", "modulename": "bci_essentials.classification.mi_classifier", "qualname": "MI_classifier.predict", "kind": "function", "doc": "<p>Predict the class labels for the provided data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nDescription of parameter <code>X</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>print_predict</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_predict</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>pred</strong> (numpy.ndarray):\nThe predicted class labels.</p>\n\n<p>shape = (<code>1st_dimension</code>,)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.null_classifier": {"fullname": "bci_essentials.classification.null_classifier", "modulename": "bci_essentials.classification.null_classifier", "kind": "module", "doc": "<p><strong>Null classifier</strong></p>\n\n<p>No model is used.\nNo fitting is done.\nThe classifier always predicts 0.</p>\n"}, "bci_essentials.classification.null_classifier.Null_classifier": {"fullname": "bci_essentials.classification.null_classifier.Null_classifier", "modulename": "bci_essentials.classification.null_classifier", "qualname": "Null_classifier", "kind": "class", "doc": "<p>Null Classifier class (<em>inherits from Generic_classifier</em>).</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"fullname": "bci_essentials.classification.null_classifier.Null_classifier.fit", "modulename": "bci_essentials.classification.null_classifier", "qualname": "Null_classifier.fit", "kind": "function", "doc": "<p>Fit the classifier to the data.</p>\n\n<p>No fitting is done.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"fullname": "bci_essentials.classification.null_classifier.Null_classifier.predict", "modulename": "bci_essentials.classification.null_classifier", "qualname": "Null_classifier.predict", "kind": "function", "doc": "<p>Predict the class of the data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nDescription of parameter <code>X</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>print_predict</strong> (bool):\nDescription of parameter <code>print_predict</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>0</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"fullname": "bci_essentials.classification.ssvep_basic_tf_classifier", "modulename": "bci_essentials.classification.ssvep_basic_tf_classifier", "kind": "module", "doc": "<p><strong>SSVEP Basic Training-Free Classifier</strong></p>\n\n<p>Classifies SSVEP based on relative bandpower, taking only the maximum.</p>\n"}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"fullname": "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier", "modulename": "bci_essentials.classification.ssvep_basic_tf_classifier", "qualname": "SSVEP_basic_tf_classifier", "kind": "class", "doc": "<p>SSVEP Basic Training-Free Classifier class\n(<em>inherits from Generic_classifier</em>).</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"fullname": "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings", "modulename": "bci_essentials.classification.ssvep_basic_tf_classifier", "qualname": "SSVEP_basic_tf_classifier.set_ssvep_settings", "kind": "function", "doc": "<p>Set the SSVEP settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sampling_freq</strong> (int):\nDescription of parameter <code>sampling_freq</code>.</li>\n<li><strong>target_freqs</strong> (list of <code>int</code>):\nDescription of parameter <code>target_freqs</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>fit()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sampling_freq</span>, </span><span class=\"param\"><span class=\"n\">target_freqs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"fullname": "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit", "modulename": "bci_essentials.classification.ssvep_basic_tf_classifier", "qualname": "SSVEP_basic_tf_classifier.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>predict()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"fullname": "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict", "modulename": "bci_essentials.classification.ssvep_basic_tf_classifier", "qualname": "SSVEP_basic_tf_classifier.predict", "kind": "function", "doc": "<p>Predict the class labels for the provided data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nDescription of parameter <code>X</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>print_predict</strong> (bool):\nDescription of parameter <code>print_predict</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>prediction</strong> (numpy.ndarray):\nThe predicted class labels.</p>\n\n<p>shape = (<code>1st_dimension</code>,)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"fullname": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "modulename": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "kind": "module", "doc": "<p><strong>SSVEP Riemannian MDM Classifier</strong></p>\n\n<p>Classifies SSVEP based on relative band power at the expected\nfrequencies.</p>\n"}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"fullname": "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier", "modulename": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "qualname": "SSVEP_riemannian_mdm_classifier", "kind": "class", "doc": "<p>SSVEP Riemannian MDM Classifier class\n(<em>inherits from Generic_classifier</em>)</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"fullname": "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings", "modulename": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "qualname": "SSVEP_riemannian_mdm_classifier.set_ssvep_settings", "kind": "function", "doc": "<p>Set the SSVEP settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, <em>optional</em>):\nNumber of folds for cross-validation.\n<ul>\n<li>Default is <code>3</code>.</li>\n</ul></li>\n<li><strong>random_seed</strong> (int, <em>optional</em>):\nRandom seed.\n<ul>\n<li>Default is <code>42</code>.</li>\n</ul></li>\n<li><strong>n_harmonics</strong> (int, <em>optional</em>):\nNumber of harmonics to be used for each frequency.\n<ul>\n<li>Default is <code>2</code>.</li>\n</ul></li>\n<li><strong>f_width</strong> (float, <em>optional</em>):\nWidth of frequency bins to be used around the target\nfrequencies.\n<ul>\n<li>Default is <code>0.2</code>.</li>\n</ul></li>\n<li><strong>covariance_estimator</strong> (str, <em>optional</em>):\nCovariance Estimator (see Covariances - pyriemann)\n<ul>\n<li>Default is <code>\"scm\"</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>fit()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">n_harmonics</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">f_width</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">covariance_estimator</span><span class=\"o\">=</span><span class=\"s1\">&#39;scm&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"fullname": "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial", "modulename": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "qualname": "SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial", "kind": "function", "doc": "<p>Get SSVEP Supertrial.</p>\n\n<p>Creates the Riemannian Geometry supertrial for SSVEP.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nWindows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>nwindows</code>,<code>nchannels</code>,<code>nsamples</code>)</p></li>\n<li><strong>target_freqs</strong> (numpy.ndarray):\nTarget frequencies for the SSVEP.</li>\n<li><strong>fsample</strong> (float):\nSampling rate.</li>\n<li><strong>f_width</strong> (float, <em>optional</em>):\nWidth of frequency bins to be used around the target\nfrequencies.\n<ul>\n<li>Default is <code>0.4</code>.</li>\n</ul></li>\n<li><strong>n_harmonics</strong> (int, <em>optional</em>):\nNumber of harmonics to be used for each frequency.\n<ul>\n<li>Default is <code>2</code>.</li>\n</ul></li>\n<li><strong>covarianc_estimator</strong> (str, <em>optional</em>):\nCovariance Estimator (see Covariances - pyriemann)\n<ul>\n<li>Default is <code>\"scm\"</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>super_X</strong> (numpy.ndarray):\nSupertrials of X.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>nwindows</code>,<code>nchannels*number of target_freqs</code>,\n<code>nchannels*number of target_freqs</code>)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">target_freqs</span>,</span><span class=\"param\">\t<span class=\"n\">fsample</span>,</span><span class=\"param\">\t<span class=\"n\">f_width</span><span class=\"o\">=</span><span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">n_harmonics</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">covariance_estimator</span><span class=\"o\">=</span><span class=\"s1\">&#39;scm&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"fullname": "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit", "modulename": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "qualname": "SSVEP_riemannian_mdm_classifier.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>predict()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"fullname": "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict", "modulename": "bci_essentials.classification.ssvep_riemannian_mdm_classifier", "qualname": "SSVEP_riemannian_mdm_classifier.predict", "kind": "function", "doc": "<p>Predict the class labels for the provided data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nDescription of parameter <code>X</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>print_predict</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_predict</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>pred</strong> (numpy.ndarray):\nThe predicted class labels.</p>\n\n<p>shape = (<code>1st_dimension</code>,)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.switch_deep_classifier": {"fullname": "bci_essentials.classification.switch_deep_classifier", "modulename": "bci_essentials.classification.switch_deep_classifier", "kind": "module", "doc": "<p><strong>Switch Deep Classifier</strong></p>\n\n<p>This is a switch_classifier using a deep neural network implemented\nin TensorFlow.</p>\n\n<ul>\n<li>This means that classification occurs between neutral and one other\nlabel (i.e. Binary classification).</li>\n<li>The produced probabilities between labels are then compared for one\nfinal classification.</li>\n</ul>\n\n<p><strong><code>ToDo</code>: Missing correct implementation of this classifier</strong>.\nThe neural networks are not defined (the code blocks are commented out).</p>\n"}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"fullname": "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier", "modulename": "bci_essentials.classification.switch_deep_classifier", "qualname": "Switch_deep_classifier", "kind": "class", "doc": "<p>Switch Deep Classifier class\n(<em>inherits from Generic_classifier</em>).</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"fullname": "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings", "modulename": "bci_essentials.classification.switch_deep_classifier", "qualname": "Switch_deep_classifier.set_switch_classifier_settings", "kind": "function", "doc": "<p>Function defines all basic settings for classification.</p>\n\n<p>Function has 6 parameters and defines two neural networks.\nOne that will have weights and another that will not.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, <em>optional</em>):\nNumber of splits for StratifiedKFold.\n<ul>\n<li>Default is <code>2</code>.</li>\n</ul></li>\n<li><strong>rebuild</strong> (bool, <em>optional</em>):\nResetting index for each call of <code>fit()</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>random_seed</strong> (int, <em>optional</em>):\nRandom seed. Ensures the same output for neural net each run if\nno parameters are changed\n<ul>\n<li>Default is <code>42</code>.</li>\n</ul></li>\n<li><strong>activation_main</strong> (str, <em>optional</em>):\nActivation function for hidden layers of the neural network.\n<ul>\n<li>Default is <code>relu</code>.</li>\n</ul></li>\n<li><strong>activation_class</strong> (str, <em>optional</em>):\nActivation function for the final layer of the neural network.\n<ul>\n<li>Default is <code>sigmoid</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created are used in <code>fit()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">rebuild</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">activation_main</span><span class=\"o\">=</span><span class=\"s1\">&#39;relu&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">activation_class</span><span class=\"o\">=</span><span class=\"s1\">&#39;sigmoid&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"fullname": "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit", "modulename": "bci_essentials.classification.switch_deep_classifier", "qualname": "Switch_deep_classifier.fit", "kind": "function", "doc": "<p>Fitting function for Switch_deep_classifier.</p>\n\n<p>Function uses the StratifiedKFold() function to split the data and\nthen preprocess it using StandardScalar().\nThe neural network is then fit and appended to a list before being reset.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>predict()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"fullname": "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict", "modulename": "bci_essentials.classification.switch_deep_classifier", "qualname": "Switch_deep_classifier.predict", "kind": "function", "doc": "<p>Predict function which preprocesses data and makes prediction(s).</p>\n\n<p>Function is passed an array of size <code>(X, 8, 512)</code> from <code>bci_data.py</code>\nwhere it will predict upon the likelihood of state 1 vs state 2.\nOnly works for three states currently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (np.ndarray):\nAn array that will be predicted upon by previously trained\nmodels.</li>\n<li><strong>print_predict</strong> (bool):\nDescription of parameter <code>print_predict</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>final_string</strong>: Predictions formatted as strings for Unity to process it.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Error if there are not an appropriate amount of labels (three) to complete predictions on.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.switch_mdm_classifier": {"fullname": "bci_essentials.classification.switch_mdm_classifier", "modulename": "bci_essentials.classification.switch_mdm_classifier", "kind": "module", "doc": "<p><em>*Switch MDM Classifier *</em></p>\n\n<p>This is a switch_classifier.</p>\n\n<ul>\n<li>This means that classification occurs between neutral and one other\nlabel (i.e. Binary classification).</li>\n<li>The produced probabilities between labels are then compared for one\nfinal classification.</li>\n</ul>\n\n<p><strong><code>ToDo</code>: Missing correct implementation of this classifier</strong>'</p>\n"}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"fullname": "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier", "modulename": "bci_essentials.classification.switch_mdm_classifier", "qualname": "Switch_mdm_classifier", "kind": "class", "doc": "<p>Switch MDM Classifier class (<em>inherits from Generic_classifier</em>).</p>\n", "bases": "bci_essentials.classification.generic_classifier.Generic_classifier"}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"fullname": "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings", "modulename": "bci_essentials.classification.switch_mdm_classifier", "qualname": "Switch_mdm_classifier.set_switch_classifier_mdm_settings", "kind": "function", "doc": "<p>Set the Switch Classifier MDM settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, <em>optional</em>):\nNumber of folds for cross-validation.\n<ul>\n<li>Default is <code>2</code>.</li>\n</ul></li>\n<li><strong>rebuild</strong> (bool, <em>optional</em>):\nRebuild the classifier each time. <em>More description needed</em>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>random_seed</strong> (int, <em>optional</em>):\nRandom seed.\n<ul>\n<li>Default is <code>42</code>.</li>\n</ul></li>\n<li><strong>n_jobs</strong> (int, <em>optional</em>):\nThe number of threads to dedicate to this calculation.</li>\n<li><strong>activation_main</strong> (str, <em>optional</em>):\nActivation function for hidden layers.\n<ul>\n<li>Default is <code>relu</code>.</li>\n</ul></li>\n<li><strong>activation_class</strong> (str, <em>optional</em>):\nActivation function for the output layer.\n<ul>\n<li>Default is <code>sigmoid</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created are used in <code>fit()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">rebuild</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">activation_main</span><span class=\"o\">=</span><span class=\"s1\">&#39;relu&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">activation_class</span><span class=\"o\">=</span><span class=\"s1\">&#39;sigmoid&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"fullname": "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit", "modulename": "bci_essentials.classification.switch_mdm_classifier", "qualname": "Switch_mdm_classifier.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>print_fit</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_fit</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n<li><strong>print_performance</strong> (bool, <em>optional</em>):\nDescription of parameter <code>print_performance</code>.\n<ul>\n<li>Default is <code>True</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong>: Models created used in <code>predict()</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">print_fit</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">print_performance</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"fullname": "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict", "modulename": "bci_essentials.classification.switch_mdm_classifier", "qualname": "Switch_mdm_classifier.predict", "kind": "function", "doc": "<p>Predict the class labels for the provided data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nDescription of parameter <code>X</code>.\nIf array, state size and type. E.g.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>1st_dimension</code>,<code>2nd_dimension</code>,<code>3rd_dimension</code>)</p></li>\n<li><strong>print_predict</strong> (bool):\nDescription of parameter <code>print_predict</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>final_predictions</strong> (numpy.ndarray):\nThe predicted class labels.</p>\n\n<p>shape = (<code>1st_dimension</code>,)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">print_predict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.resting_state": {"fullname": "bci_essentials.resting_state", "modulename": "bci_essentials.resting_state", "kind": "module", "doc": "<p>A module for processing resting state data.</p>\n\n<p>The EEG data inputs for each function are either a single windows or\na set of windows.</p>\n\n<ul>\n<li>For single windows, inputs are of the shape <code>C x S</code>, where:\n<ul>\n<li>C = number of channels</li>\n<li>S = number of samples</li>\n</ul></li>\n<li>For multiple windows, inputs are of the shape <code>W x C x S</code>, where:\n<ul>\n<li>W = number of windows</li>\n<li>C = number of channels</li>\n<li>S = number of samples</li>\n</ul></li>\n</ul>\n"}, "bci_essentials.resting_state.get_shape": {"fullname": "bci_essentials.resting_state.get_shape", "modulename": "bci_essentials.resting_state", "qualname": "get_shape", "kind": "function", "doc": "<p>Get the shape of the input data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nWindow(s) of resting state EEG data.\n2D or 3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>C_channels</code>,<code>S_samples</code>) OR\n(<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>W</strong> (int):\nNumber of windows.</li>\n<li><strong>C</strong> (int):\nNumber of channels.</li>\n<li><strong>S</strong> (int):\nNumber of samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.resting_state.bandpower": {"fullname": "bci_essentials.resting_state.bandpower", "modulename": "bci_essentials.resting_state", "qualname": "bandpower", "kind": "function", "doc": "<p>Get the bandpower of a window of EEG.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nA single resting state EEG window\n2D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><strong>fs</strong> (float):\nEEG sampling frequency.</li>\n<li><strong>fmin</strong> (float):\nLower frequency bound.</li>\n<li><strong>fmax</strong> (float):\nUpper frequency bound.</li>\n<li><strong>normalization</strong> (string, <em>optional</em>):\nMethod for normalization.\n<ul>\n<li><code>\"norm\"</code> for divide by norm.</li>\n<li><code>\"sum\"</code> for divide by sum.</li>\n<li>Default is <code>None</code> and no normalization is done.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>power</strong> (numpy.ndarray):\nBandpower of frequency band.</p>\n\n<p>shape = (<code>C_channels</code>)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">fs</span>, </span><span class=\"param\"><span class=\"n\">fmin</span>, </span><span class=\"param\"><span class=\"n\">fmax</span>, </span><span class=\"param\"><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.resting_state.get_alpha_peak": {"fullname": "bci_essentials.resting_state.get_alpha_peak", "modulename": "bci_essentials.resting_state", "qualname": "get_alpha_peak", "kind": "function", "doc": "<p>Get the alpha peak based on the all channel median PSD.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nResting state EEG window with eyes closed.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><strong>alpha_min</strong> (float, <em>optional</em>):\nLowest possible value of alpha peak (Hz)\n<ul>\n<li>Default is <code>8</code>.</li>\n</ul></li>\n<li><strong>alpha_max</strong> (float, <em>optional</em>):\nHighest possible value of alpha peak (Hz)\n<ul>\n<li>Default is <code>12</code>.</li>\n</ul></li>\n<li><strong>plot_psd</strong> (bool, <em>optional</em>):\nPlot the PSD for inspection.\n<ul>\n<li>Default is <code>False</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>peak</strong> (float):\nThe peak alpha frequency.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">alpha_min</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">alpha_max</span><span class=\"o\">=</span><span class=\"mi\">12</span>, </span><span class=\"param\"><span class=\"n\">plot_psd</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.resting_state.get_bandpower_features": {"fullname": "bci_essentials.resting_state.get_bandpower_features", "modulename": "bci_essentials.resting_state", "qualname": "get_bandpower_features", "kind": "function", "doc": "<p>Get bandpower features.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nWindows of resting state EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>W_windows</code>,<code>C_channels</code>,<code>S_samples</code>)</p></li>\n<li><strong>fs</strong> (float):\nSampling frequency (Hz).</li>\n<li><strong>transition_freqs</strong> (array-like, <em>optional</em>):\nThe transition frequencies of the desired power bands.\nThe first value is the lower cutoff, the last value is the\nupper cutoff, the middle values are band transition frequencies.\n<ul>\n<li>Default is <code>[0, 4, 8, 12, 30]</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>abs_bandpower</strong> (numpy.ndarray):\nA numpy array of the absolute bandpower of provided bands.\nThe last item is the total bandpower. The array length is equal\nto the length of <code>transition_freqs</code>.</li>\n<li><strong>rel_bandpower</strong> (numpy.ndarray):\nA numpy array of the relative bandpower of provided bands with\nrespect to the entire region of interest from <code>transition_freqs[0]</code>\nto <code>transition_freqs[-1]</code>. The last item is the total relative\nbandpower and should always equal <code>1</code>. The array length is equal to\nthe length of <code>transition_freqs</code>.</li>\n<li><strong>rel_bandpower_mat</strong> (array_like):\nA numpy array of the relative bandpower of provided bands such that\nlocation <code>(R,C)</code> corresponds to the power of <code>R</code> relative to <code>C</code>.\nThe final row and column correspond to the cumulative power of\nall bands such that <code>(R,-1)</code> is <code>R</code> relative to all bands</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">fs</span>, </span><span class=\"param\"><span class=\"n\">transition_freqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.signal_processing": {"fullname": "bci_essentials.signal_processing", "modulename": "bci_essentials.signal_processing", "kind": "module", "doc": "<p>Signal processing tools for processing windows of EEG data.</p>\n\n<p>The EEG data inputs can be 2D or 3D arrays. Either 'N x M' or 'P x N x M', where:\n    - P = number of windows (for a single window <code>N = 1</code>)\n    - N = number of channels\n    - M = number of samples</p>\n\n<ul>\n<li>Outputs are the same dimensions (<code>P x N x M</code>)</li>\n</ul>\n"}, "bci_essentials.signal_processing.bandpass": {"fullname": "bci_essentials.signal_processing.bandpass", "modulename": "bci_essentials.signal_processing", "qualname": "bandpass", "kind": "function", "doc": "<p>Bandpass Filter.</p>\n\n<p>Filters out frequencies outside of the range f_low to f_high with a\nButterworth filter of specific order.</p>\n\n<p>Wraps the scipy.signal.butter and scipy.signal.filtfilt methods.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nWindows of EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n<li><strong>f_low</strong> (float):\nLower corner frequency.</li>\n<li><strong>f_high</strong> (float):\nUpper corner frequency.</li>\n<li><strong>order</strong> (int):\nOrder of the filter.</li>\n<li><strong>fsample</strong> (float):\nSampling rate of signal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>new_data</strong> (numpy.ndarray):\nWindows of filtered EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">f_low</span>, </span><span class=\"param\"><span class=\"n\">f_high</span>, </span><span class=\"param\"><span class=\"n\">order</span>, </span><span class=\"param\"><span class=\"n\">fsample</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.signal_processing.lowpass": {"fullname": "bci_essentials.signal_processing.lowpass", "modulename": "bci_essentials.signal_processing", "qualname": "lowpass", "kind": "function", "doc": "<p>Lowpass Filter.</p>\n\n<p>Filters out frequencies above f_critical with a Butterworth filter of specific order.</p>\n\n<p>Wraps the scipy.signal.butter and scipy.signal.filtfilt methods.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nWindows of EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n<li><strong>f_critical</strong> (float):\nCritical (cutoff) frequency.</li>\n<li><strong>order</strong> (int):\nOrder of the filter.</li>\n<li><strong>fsample</strong> (float):\nSampling rate of signal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>new_data</strong> (numpy.ndarray):\nWindows of filtered EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">f_critical</span>, </span><span class=\"param\"><span class=\"n\">order</span>, </span><span class=\"param\"><span class=\"n\">fsample</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.signal_processing.highpass": {"fullname": "bci_essentials.signal_processing.highpass", "modulename": "bci_essentials.signal_processing", "qualname": "highpass", "kind": "function", "doc": "<p>Highpass Filter.</p>\n\n<p>Filters out frequencies below f_critical with a Butterworth filter of specific order.</p>\n\n<p>Wraps the scipy.signal.butter and scipy.signal.filtfilt methods.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nWindows of EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n<li><strong>f_critical</strong> (float):\nCritical (cutoff) frequency.</li>\n<li><strong>order</strong> (int):\nOrder of the filter.</li>\n<li><strong>fsample</strong> (float):\nSampling rate of signal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>new_data</strong> (numpy.ndarray):\nWindows of filtered EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">f_critical</span>, </span><span class=\"param\"><span class=\"n\">order</span>, </span><span class=\"param\"><span class=\"n\">fsample</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.signal_processing.notch": {"fullname": "bci_essentials.signal_processing.notch", "modulename": "bci_essentials.signal_processing", "qualname": "notch", "kind": "function", "doc": "<p>Notch Filter.</p>\n\n<p>Notch filter for removing specific frequency components.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>data</strong> (numpy.ndarray):\nWindows of EEG data.\n3D (or 2D) array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M) or (N, M)</p></li>\n<li><strong>f_notch</strong> (float):\nFrequency of notch.</li>\n<li><strong>Q</strong> (float):\nQuality factor. Dimensionless parameter that characterizes\nnotch filter -3 dB bandwidth bw relative to its\ncenter frequency, Q = w0/bw.</li>\n<li><strong>fsample</strong> (float):\nSampling rate of signal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><p><strong>new_data</strong> (numpy.ndarray):\nWindows of filtered EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_windows</code>,<code>M_channels</code>,<code>P_samples</code>)</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">f_notch</span>, </span><span class=\"param\"><span class=\"n\">Q</span>, </span><span class=\"param\"><span class=\"n\">fsample</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.signal_processing.lico": {"fullname": "bci_essentials.signal_processing.lico", "modulename": "bci_essentials.signal_processing", "qualname": "lico", "kind": "function", "doc": "<p>Oversampling (linear combination oversampling (LiCO))</p>\n\n<p>Samples random linear combinations of existing epochs of X.</p>\n\n<p>This is broken, but I am also unsure if it deserves to be fixed. At the very least it probably belongs in a different file. -Brian</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>X</strong> (numpy.ndarray):\nWindows of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (P, N, M)</p></li>\n<li><strong>y</strong> (numpy.ndarray):\nLabels corresponding to X.</li>\n<li><strong>expansion_factor</strong> (int, <em>optional</em>):\nNumber of times larger to make the output set over_X\n<ul>\n<li>Default is <code>3</code>.</li>\n</ul></li>\n<li><strong>sum_num</strong> (int, <em>optional</em>):\nNumber of signals to be summed together\n<ul>\n<li>Default is <code>2</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>over_X</strong> (numpy.ndarray):\nOversampled X.</li>\n<li><strong>over_y</strong> (numpy.ndarray):\nOversampled y.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">expansion_factor</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">sum_num</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.visuals": {"fullname": "bci_essentials.visuals", "modulename": "bci_essentials.visuals", "kind": "module", "doc": "<p>Visualization toolbox for BCI Essentials</p>\n\n<p>The EEG data inputs for each function are either windows or\ndecision blocks.</p>\n\n<ul>\n<li>For windows, inputs are of the shape <code>N x M x P</code>, where:\n<ul>\n<li>N = number of channels</li>\n<li>M = number of samples</li>\n<li>P = number of windows (for a single window <code>P = 1</code>)</li>\n</ul></li>\n<li>For decision blocks, inputs are of the shape <code>N x M x P</code>, where:\n<ul>\n<li>N = number of channels</li>\n<li>M = number of samples</li>\n<li>P = number of possible selections</li>\n</ul></li>\n</ul>\n"}, "bci_essentials.visuals.decision_vis": {"fullname": "bci_essentials.visuals.decision_vis", "modulename": "bci_essentials.visuals", "qualname": "decision_vis", "kind": "function", "doc": "<p>Visualization for P300 ERP.</p>\n\n<p>Creates plots of the P300 ERP and non-ERP for each channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>decision_block</strong> (numpy.ndarray):\nA decision block of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>M_samples</code>,<code>P_selections</code>)</p></li>\n<li><strong>f_sample</strong> (float):\nSampling rate of the signal.</li>\n<li><strong>label</strong> (int):\nIdentifies the ERP from training label.</li>\n<li><strong>channel_labels</strong> (list of <code>str</code>, <em>optional</em>):\nIdentity of the names of the channels according to 10-20 system\n<ul>\n<li>Default is <code>[]</code> and assigns labels based on the channel's index.</li>\n</ul></li>\n<li><strong>ylims</strong> (tuple of <code>(int, int)</code>, <em>optional</em>):\nY-axis limits for the plots\n<ul>\n<li>Default is <code>(-100, 100)</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">decision_block</span>,</span><span class=\"param\">\t<span class=\"n\">f_sample</span>,</span><span class=\"param\">\t<span class=\"n\">label</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">ylims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.visuals.plot_big_decision_block": {"fullname": "bci_essentials.visuals.plot_big_decision_block", "modulename": "bci_essentials.visuals", "qualname": "plot_big_decision_block", "kind": "function", "doc": "<p>Plots the big decision block.</p>\n\n<p>Creates plots of the P300 ERP and non-ERP big decision blocks for each\nchannel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>decision_block</strong> (numpy.ndarray):\nA decision block of EEG data.\n3D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>M_samples</code>,<code>P_selections</code>)</p></li>\n<li><strong>f_sample</strong> (float):\nSampling rate of the signal.</li>\n<li><strong>label</strong> (int):\nIdentifies the ERP from training label.</li>\n<li><strong>channel_labels</strong> (list of str, <em>optional</em>):\nIdentity of the names of the channels according to 10-20 system.\n<ul>\n<li>Default is <code>[]</code> and assigns labels based on the channel's index).</li>\n</ul></li>\n<li><strong>erp_targets</strong> (list, <em>optional</em>):\nList of the ERP targets\n<ul>\n<li>Default is <code>None</code>.</li>\n</ul></li>\n<li><strong>ylims</strong> (tuple of <code>(int, int)</code>, <em>optional</em>):\nY-axis limits for the plots\n<ul>\n<li>Default is <code>(-100, 100)</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">big_decision_block</span>,</span><span class=\"param\">\t<span class=\"n\">f_sample</span>,</span><span class=\"param\">\t<span class=\"n\">channel_labels</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">erp_targets</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ylims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bci_essentials.visuals.plot_window": {"fullname": "bci_essentials.visuals.plot_window", "modulename": "bci_essentials.visuals", "qualname": "plot_window", "kind": "function", "doc": "<p>Plots a window of EEG data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>window</strong> (numpy.ndarray):\nA window of EEG data.\n2D array containing data with <code>float</code> type.</p>\n\n<p>shape = (<code>N_channels</code>,<code>M_samples</code>)</p></li>\n<li><strong>f_sample</strong> (float):\nSampling rate of the signal.</li>\n<li><strong>channel_labels</strong> (list, <em>optional</em>):\nIdentity of the names of the channels according to 10-20 system\n<ul>\n<li>Default is <code>[]</code> and assigns labels based on the channel's index.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>None</code></strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">window</span>, </span><span class=\"param\"><span class=\"n\">f_sample</span>, </span><span class=\"param\"><span class=\"n\">channel_labels</span><span class=\"o\">=</span><span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"bci_essentials": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 147}, "bci_essentials.bci_data": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 130}, "bci_essentials.bci_data.EEG_data": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 47}, "bci_essentials.bci_data.EEG_data.__init__": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 186}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "bci_essentials.bci_data.EEG_data.ping_count": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "bci_essentials.bci_data.EEG_data.ping_interval": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "bci_essentials.bci_data.EEG_data.edit_settings": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 152, "bases": 0, "doc": 202}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 141}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 82}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 184}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 173}, "bci_essentials.bci_data.EEG_data.save_data": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 87}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 47}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 46}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"qualname": 8, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "bci_essentials.bci_data.EEG_data.preprocessing": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 270}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 129}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 29}, "bci_essentials.bci_data.EEG_data.main": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 254, "bases": 0, "doc": 888}, "bci_essentials.bci_data.ERP_data": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 21}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 87}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 46}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 86}, "bci_essentials.bci_data.ERP_data.main": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 271, "bases": 0, "doc": 903}, "bci_essentials.channel_selection": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 67}, "bci_essentials.channel_selection.channel_selection_by_method": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 163, "bases": 0, "doc": 693}, "bci_essentials.channel_selection.check_stopping_criterion": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 252}, "bci_essentials.channel_selection.sfs": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 507}, "bci_essentials.channel_selection.sbs": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 506}, "bci_essentials.channel_selection.sbfs": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 507}, "bci_essentials.channel_selection.sffs": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 507}, "bci_essentials.classification": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "bci_essentials.classification.erp_rg_classifier": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 15}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 250}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 126}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 218}, "bci_essentials.classification.generic_classifier": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 582}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 200}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 155, "bases": 0, "doc": 403}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 191}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 118}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 48}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 49}, "bci_essentials.classification.mi_classifier": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "bci_essentials.classification.mi_classifier.MI_classifier": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 14}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 147, "bases": 0, "doc": 337}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 96}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 128}, "bci_essentials.classification.null_classifier": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "bci_essentials.classification.null_classifier.Null_classifier": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 12}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 97}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 96}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 15}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"qualname": 7, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 73}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 96}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 114}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 14}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"qualname": 7, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 188}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"qualname": 7, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 232}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 96}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 128}, "bci_essentials.classification.switch_deep_classifier": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 86}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 13}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 227}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 131}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 150}, "bci_essentials.classification.switch_mdm_classifier": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 67}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 13}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"qualname": 8, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 204}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 96}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 115}, "bci_essentials.resting_state": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 106}, "bci_essentials.resting_state.get_shape": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 111}, "bci_essentials.resting_state.bandpower": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 173}, "bci_essentials.resting_state.get_alpha_peak": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 171}, "bci_essentials.resting_state.get_bandpower_features": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 308}, "bci_essentials.signal_processing": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 74}, "bci_essentials.signal_processing.bandpass": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 176}, "bci_essentials.signal_processing.lowpass": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 158}, "bci_essentials.signal_processing.highpass": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 158}, "bci_essentials.signal_processing.notch": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 158}, "bci_essentials.signal_processing.lico": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 194}, "bci_essentials.visuals": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 116}, "bci_essentials.visuals.decision_vis": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 200}, "bci_essentials.visuals.plot_big_decision_block": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 230}, "bci_essentials.visuals.plot_window": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 125}}, "length": 96, "save": true}, "index": {"qualname": {"root": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 22}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}}, "df": 9}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 27}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sfs": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sbs": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sbfs": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}}, "df": 9}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 8}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_shape": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 37}}}}}}}}, "f": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}}}}}}, "p": {"3": {"0": {"0": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}}, "df": 3}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}}, "df": 3}}, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}}, "df": 5}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.lowpass": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 7}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 8}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}}, "df": 1}}, "t": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}}, "df": 4}, "d": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 1}}}}}}}}, "fullname": {"root": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 96}}, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 96}}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 22}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}}, "df": 10}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 28}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 8}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sfs": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sbs": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sbfs": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 11}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_shape": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 6}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 45}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 45}}}}}}}}}}}}, "f": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}}}}}}, "p": {"3": {"0": {"0": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 6}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 8}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}}, "df": 3}}, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.lowpass": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 7}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}}, "df": 1}}, "t": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}}, "df": 5}, "d": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 11}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}}, "df": 5}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 4}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 1}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"0": {"0": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 11}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "2": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}, "2": {"5": {"6": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 6}, "3": {"0": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}, "9": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 4.242640687119285}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.449489742783178}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.449489742783178}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 2.8284271247461903}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 2}}, "df": 12}, "docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3}, "4": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "2": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 5}, "docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}, "5": {"0": {"0": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 5}, "6": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "4": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "8": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 4}, "9": {"9": {"9": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 11}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 6.4031242374328485}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 4.69041575982343}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 7.54983443527075}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 5.830951894845301}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 3.7416573867739413}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 7.3484692283495345}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 4.69041575982343}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.EEG_data.main": {"tf": 13.892443989449804}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.main": {"tf": 14.212670403551895}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 11.090536506409418}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 7.0710678118654755}, "bci_essentials.channel_selection.sfs": {"tf": 8.426149773176359}, "bci_essentials.channel_selection.sbs": {"tf": 8.426149773176359}, "bci_essentials.channel_selection.sbfs": {"tf": 8.426149773176359}, "bci_essentials.channel_selection.sffs": {"tf": 8.426149773176359}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 8.18535277187245}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 5.0990195135927845}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 8.06225774829855}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 4.58257569495584}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 6.082762530298219}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 10.816653826391969}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 7}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 4.69041575982343}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 4}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 4}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 10.44030650891055}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 5.0990195135927845}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 4.69041575982343}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 5.0990195135927845}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 4.242640687119285}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 4.242640687119285}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 5.0990195135927845}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 4.242640687119285}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 7.615773105863909}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 7.416198487095663}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 5.0990195135927845}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 4.69041575982343}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 7.745966692414834}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 5.0990195135927845}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 4.242640687119285}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 8.306623862918075}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 5.0990195135927845}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 4.242640687119285}, "bci_essentials.resting_state.get_shape": {"tf": 3.1622776601683795}, "bci_essentials.resting_state.bandpower": {"tf": 5.477225575051661}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 5.830951894845301}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 6.782329983125268}, "bci_essentials.signal_processing.bandpass": {"tf": 5.0990195135927845}, "bci_essentials.signal_processing.lowpass": {"tf": 4.69041575982343}, "bci_essentials.signal_processing.highpass": {"tf": 4.69041575982343}, "bci_essentials.signal_processing.notch": {"tf": 4.69041575982343}, "bci_essentials.signal_processing.lico": {"tf": 6.164414002968976}, "bci_essentials.visuals.decision_vis": {"tf": 7.3484692283495345}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 7.615773105863909}, "bci_essentials.visuals.plot_window": {"tf": 4.795831523312719}}, "df": 65, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 45}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1, "x": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}}, "df": 13, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 11, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.7320508075688772}}, "df": 8}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}}, "df": 2, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 11}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}, "w": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 9, "s": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 9}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "l": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 6}}}, "a": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 8}}}, "x": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 14, "d": {"docs": {}, "df": 0, "f": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 27}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 9}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 16}}}}}}}}}}, "p": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}}, "df": 2}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 9}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 6}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.6457513110645907}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}}, "df": 21}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 2, "s": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 5, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 6}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 4, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 2}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}}, "q": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}, "bases": {"root": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}}, "df": 7}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}}, "df": 7}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}, "doc": {"root": {"0": {"0": {"0": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials": {"tf": 1}}, "df": 1}, "1": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 14}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 3}, "docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 5}, "2": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}}, "df": 11, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 6}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 8}}}, "2": {"0": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3}, "5": {"6": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 7, "d": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 10}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 8}}}, "3": {"0": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 4, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 27}, "r": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 8}}}, "4": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "2": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 5}, "docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}, "5": {"0": {"0": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}, "docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "1": {"2": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 6}, "6": {"0": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "4": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}, "8": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 5}, "9": {"9": {"9": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"bci_essentials": {"tf": 6.855654600401044}, "bci_essentials.bci_data": {"tf": 6.244997998398398}, "bci_essentials.bci_data.EEG_data": {"tf": 3.3166247903554}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 10.344080432788601}, "bci_essentials.bci_data.EEG_data.explicit_settings": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.classifier_defined": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.stream_outlet": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.ping_count": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.ping_interval": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.resting_state_exists": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 11.40175425099138}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 9.433981132056603}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 6.782329983125268}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 10.535653752852738}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 4.242640687119285}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 9.219544457292887}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 5.830951894845301}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 4.69041575982343}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 4.69041575982343}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 4.69041575982343}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 12.165525060596439}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 8.246211251235321}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 4.242640687119285}, "bci_essentials.bci_data.EEG_data.main": {"tf": 20.273134932713294}, "bci_essentials.bci_data.ERP_data": {"tf": 2.449489742783178}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 5.744562646538029}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 4.69041575982343}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 5.830951894845301}, "bci_essentials.bci_data.ERP_data.main": {"tf": 20.518284528683193}, "bci_essentials.channel_selection": {"tf": 4.123105625617661}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 17.86057109949175}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 10.04987562112089}, "bci_essentials.channel_selection.sfs": {"tf": 14.142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 14.142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 14.142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 14.142135623730951}, "bci_essentials.classification": {"tf": 3.3166247903554}, "bci_essentials.classification.erp_rg_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 10.908712114635714}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 8.246211251235321}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 11.532562594670797}, "bci_essentials.classification.generic_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 18.138357147217054}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 10.344080432788601}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 15.066519173319364}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 10.246950765959598}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 7.745966692414834}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 5.291502622129181}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 5.291502622129181}, "bci_essentials.classification.mi_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 14.317821063276353}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 7.810249675906654}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 8.18535277187245}, "bci_essentials.classification.null_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 2.23606797749979}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 7.745966692414834}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 7.0710678118654755}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 2.23606797749979}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 6.557438524302}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 7.810249675906654}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 7.54983443527075}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 2.6457513110645907}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 2.23606797749979}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 10.344080432788601}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 10.862780491200215}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 7.810249675906654}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 8.18535277187245}, "bci_essentials.classification.switch_deep_classifier": {"tf": 4.898979485566356}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 10.535653752852738}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 8}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 7.483314773547883}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 5}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 10.723805294763608}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 7.810249675906654}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 7.54983443527075}, "bci_essentials.resting_state": {"tf": 6}, "bci_essentials.resting_state.get_shape": {"tf": 7.483314773547883}, "bci_essentials.resting_state.bandpower": {"tf": 9.643650760992955}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 9.38083151964686}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 9.848857801796104}, "bci_essentials.signal_processing": {"tf": 4}, "bci_essentials.signal_processing.bandpass": {"tf": 8.426149773176359}, "bci_essentials.signal_processing.lowpass": {"tf": 8.06225774829855}, "bci_essentials.signal_processing.highpass": {"tf": 8.06225774829855}, "bci_essentials.signal_processing.notch": {"tf": 8.246211251235321}, "bci_essentials.signal_processing.lico": {"tf": 9.1104335791443}, "bci_essentials.visuals": {"tf": 6.324555320336759}, "bci_essentials.visuals.decision_vis": {"tf": 9.797958971132712}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 10.488088481701515}, "bci_essentials.visuals.plot_window": {"tf": 7.810249675906654}}, "df": 96, "a": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1.4142135623730951}}, "df": 38, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1.7320508075688772}, "bci_essentials.classification": {"tf": 1}}, "df": 2}}}}}}}}, "y": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.7320508075688772}}, "df": 19}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2.8284271247461903}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 37, "s": {"docs": {"bci_essentials.signal_processing": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.7320508075688772}}, "df": 5, "d": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 35}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.classification": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 2}, "bci_essentials.channel_selection.sbfs": {"tf": 2}, "bci_essentials.channel_selection.sffs": {"tf": 2}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 12, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 3.7416573867739413}}, "df": 2, "s": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 5}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 2.449489742783178}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 2}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 7}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}, "p": {"3": {"0": {"0": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 10}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 2.23606797749979}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 24, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 56}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1.7320508075688772}, "bci_essentials.bci_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}}, "df": 4}, "s": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 2, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}, "d": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 2}, "d": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.7320508075688772}}, "df": 16, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 5}}, "s": {"docs": {"bci_essentials.classification.null_classifier": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2}, "bci_essentials.channel_selection.sbs": {"tf": 2}, "bci_essentials.channel_selection.sbfs": {"tf": 2}, "bci_essentials.channel_selection.sffs": {"tf": 2}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 2}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 2}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 2}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 2}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 2}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 27, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}, "bci_essentials.visuals": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.449489742783178}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}}, "df": 17}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 2.23606797749979}}, "df": 1}}}, "p": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}}, "df": 2}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1.7320508075688772}}, "df": 1}}}, "f": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 2}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 9, "o": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials": {"tf": 2.23606797749979}, "bci_essentials.bci_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.449489742783178}, "bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state": {"tf": 2}, "bci_essentials.resting_state.bandpower": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals": {"tf": 2.23606797749979}, "bci_essentials.visuals.decision_vis": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}}, "df": 39, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.449489742783178}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 11}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 6}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 28}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 2}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1.7320508075688772}}, "df": 12}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2}}, "df": 3, "[": {"0": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "e": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.bandpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lowpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.highpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.notch": {"tf": 1.7320508075688772}}, "df": 7, "s": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.7320508075688772}}, "df": 16, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 13}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 2}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 2}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 2}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.lowpass": {"tf": 2}, "bci_essentials.signal_processing.highpass": {"tf": 2}, "bci_essentials.signal_processing.notch": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1.4142135623730951}}, "df": 37, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.6457513110645907}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}}, "df": 8}, "k": {"docs": {}, "df": 0, "e": {"8": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5, "s": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "h": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}}, "df": 15, "s": {"docs": {"bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.449489742783178}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.449489742783178}}, "df": 5, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}}}}}}, "y": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 5}}, "e": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1.4142135623730951}}, "df": 5}, "c": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 4}}}, "f": {"docs": {"bci_essentials": {"tf": 2}, "bci_essentials.bci_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 2}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.6457513110645907}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.6457513110645907}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.8284271247461903}, "bci_essentials.channel_selection": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 4.358898943540674}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sfs": {"tf": 4.242640687119285}, "bci_essentials.channel_selection.sbs": {"tf": 4}, "bci_essentials.channel_selection.sbfs": {"tf": 4}, "bci_essentials.channel_selection.sffs": {"tf": 4}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 5}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.6457513110645907}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 2.8284271247461903}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 2.449489742783178}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 2.8284271247461903}, "bci_essentials.resting_state.get_shape": {"tf": 2.23606797749979}, "bci_essentials.resting_state.bandpower": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 3.605551275463989}, "bci_essentials.signal_processing": {"tf": 2}, "bci_essentials.signal_processing.bandpass": {"tf": 2.449489742783178}, "bci_essentials.signal_processing.lowpass": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.highpass": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.notch": {"tf": 2}, "bci_essentials.signal_processing.lico": {"tf": 2.23606797749979}, "bci_essentials.visuals": {"tf": 2.8284271247461903}, "bci_essentials.visuals.decision_vis": {"tf": 2.6457513110645907}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 2.8284271247461903}, "bci_essentials.visuals.plot_window": {"tf": 2.23606797749979}}, "df": 66, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 3.1622776601683795}}, "df": 7}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}}, "df": 11}, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 4.47213595499958}, "bci_essentials.bci_data.ERP_data.main": {"tf": 4.58257569495584}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 3.1622776601683795}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 3.3166247903554}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 3.1622776601683795}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 40}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "r": {"docs": {"bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.7320508075688772}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 2}, "bci_essentials.signal_processing.lowpass": {"tf": 2}, "bci_essentials.signal_processing.highpass": {"tf": 2}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.visuals": {"tf": 1}}, "df": 20, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lowpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.highpass": {"tf": 1.7320508075688772}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 12, "s": {"docs": {"bci_essentials.signal_processing": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}}, "df": 11}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1, "d": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1.7320508075688772}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 3}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1.4142135623730951}}, "df": 41}}, "r": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials": {"tf": 1.7320508075688772}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.8284271247461903}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2}, "bci_essentials.visuals.decision_vis": {"tf": 2}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 2.23606797749979}}, "df": 9, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 2}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 2}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 2}}, "df": 3}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 7}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 15}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.resting_state": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}}, "df": 1, "d": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}, "bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 3}}, "df": 3}}}}}, "s": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 2.449489742783178}}, "df": 1}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}}, "df": 8, "s": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.7416573867739413}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3.4641016151377544}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}}, "df": 5}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 3}}}}, "t": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.8284271247461903}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 34}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 20}, "r": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"bci_essentials": {"tf": 1.7320508075688772}, "bci_essentials.bci_data": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.6457513110645907}, "bci_essentials.bci_data.EEG_data.main": {"tf": 5.5677643628300215}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 2}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 5.196152422706632}, "bci_essentials.channel_selection": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 5.830951894845301}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 4.123105625617661}, "bci_essentials.channel_selection.sfs": {"tf": 5.5677643628300215}, "bci_essentials.channel_selection.sbs": {"tf": 5.477225575051661}, "bci_essentials.channel_selection.sbfs": {"tf": 5.477225575051661}, "bci_essentials.channel_selection.sffs": {"tf": 5.477225575051661}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.resting_state": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_shape": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 2}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 4.69041575982343}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}, "bci_essentials.visuals": {"tf": 1.7320508075688772}, "bci_essentials.visuals.decision_vis": {"tf": 2.6457513110645907}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 3}, "bci_essentials.visuals.plot_window": {"tf": 2}}, "df": 70, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 18}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 5.0990195135927845}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 4.898979485566356}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.8284271247461903}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2.8284271247461903}, "bci_essentials.channel_selection.sbs": {"tf": 2.8284271247461903}, "bci_essentials.channel_selection.sbfs": {"tf": 2.8284271247461903}, "bci_essentials.channel_selection.sffs": {"tf": 2.8284271247461903}, "bci_essentials.classification": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.8284271247461903}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2.8284271247461903}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 2}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 40, "d": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"bci_essentials.visuals": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}}, "df": 22}}, "y": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 2}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 2.6457513110645907}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 10, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2.8284271247461903}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 2.23606797749979}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 34}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 3}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 16}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.lowpass": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.449489742783178}}, "df": 2, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.7320508075688772}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2}, "bci_essentials.channel_selection.sbs": {"tf": 2}, "bci_essentials.channel_selection.sbfs": {"tf": 2}, "bci_essentials.channel_selection.sffs": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1.4142135623730951}}, "df": 20}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.resting_state": {"tf": 2}, "bci_essentials.resting_state.get_shape": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}}, "df": 11, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 30}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 2, "s": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 1, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.6457513110645907}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 2.6457513110645907}, "bci_essentials.channel_selection.sbs": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sbfs": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sffs": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_window": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 3}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sfs": {"tf": 3}, "bci_essentials.channel_selection.sbs": {"tf": 3}, "bci_essentials.channel_selection.sbfs": {"tf": 3}, "bci_essentials.channel_selection.sffs": {"tf": 3}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.8284271247461903}, "bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1.4142135623730951}}, "df": 24}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 24, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}, "s": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}}, "df": 4}, "r": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.3166247903554}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2}, "bci_essentials.channel_selection.sbs": {"tf": 2}, "bci_essentials.channel_selection.sbfs": {"tf": 2}, "bci_essentials.channel_selection.sffs": {"tf": 2}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}}, "df": 32, "s": {"docs": {"bci_essentials.classification": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sfs": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sbs": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sbfs": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.sffs": {"tf": 2.449489742783178}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1.7320508075688772}}, "df": 10}}}}}}}, "y": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6, "d": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 4}, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 11}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.signal_processing.lowpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.highpass": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing": {"tf": 2}, "bci_essentials.signal_processing.bandpass": {"tf": 2}, "bci_essentials.signal_processing.lowpass": {"tf": 2}, "bci_essentials.signal_processing.highpass": {"tf": 2}, "bci_essentials.signal_processing.notch": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 2}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 11, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}}, "df": 4, "s": {"docs": {"bci_essentials": {"tf": 1.4142135623730951}, "bci_essentials.bci_data": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2.6457513110645907}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.6457513110645907}}, "df": 2, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 11, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 12}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "x": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}}, "df": 9}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 4}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 12, "s": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 6}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 2.23606797749979}}, "df": 6}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}}, "df": 8, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 5}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials": {"tf": 2.23606797749979}, "bci_essentials.bci_data": {"tf": 3}, "bci_essentials.bci_data.EEG_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2.6457513110645907}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 2}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.605551275463989}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3.605551275463989}, "bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 2}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 2.449489742783178}, "bci_essentials.signal_processing.lowpass": {"tf": 2.449489742783178}, "bci_essentials.signal_processing.highpass": {"tf": 2.449489742783178}, "bci_essentials.signal_processing.notch": {"tf": 2.449489742783178}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1.7320508075688772}}, "df": 58, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 8}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 2}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 2}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 2}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 2}}, "df": 9, "s": {"docs": {"bci_essentials.signal_processing": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}}, "df": 6}, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 4.47213595499958}, "bci_essentials.bci_data.ERP_data.main": {"tf": 4.58257569495584}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 3}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 3.3166247903554}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 3.1622776601683795}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 38, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 4}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 2.23606797749979}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 2.449489742783178}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}}, "df": 28}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 2}}, "df": 7, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 7}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 3}}}, "f": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}, "b": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}, "s": {"docs": {"bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state": {"tf": 2}, "bci_essentials.resting_state.get_shape": {"tf": 2}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 15, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 2}}, "b": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2.6457513110645907}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 11}}}}, "m": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}}, "df": 13}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sbfs": {"tf": 2.23606797749979}, "bci_essentials.channel_selection.sffs": {"tf": 2.23606797749979}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 2}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 24, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 18, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 16, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 9}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 11}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.channel_selection": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.7320508075688772}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 8}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4, "d": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 11}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lowpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.highpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 10, "s": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 14}}}, "e": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 23}}}}, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}}, "df": 7}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2}, "bci_essentials.channel_selection.sbs": {"tf": 2}, "bci_essentials.channel_selection.sbfs": {"tf": 2}, "bci_essentials.channel_selection.sffs": {"tf": 2}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 33}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 3}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sfs": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3, "n": {"docs": {"bci_essentials": {"tf": 1.7320508075688772}, "bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.605551275463989}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3.4641016151377544}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 27, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 3.7416573867739413}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.8284271247461903}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 2}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 2}, "bci_essentials.channel_selection.sfs": {"tf": 2}, "bci_essentials.channel_selection.sbs": {"tf": 2}, "bci_essentials.channel_selection.sbfs": {"tf": 2}, "bci_essentials.channel_selection.sffs": {"tf": 2}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_shape": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}}, "df": 30, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 3.1622776601683795}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.6457513110645907}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.resting_state": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.7320508075688772}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}}, "df": 7}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3}}}}}}, "x": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}, "s": {"docs": {"bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 2.449489742783178}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2.23606797749979}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 4.58257569495584}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 4.69041575982343}, "bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 3.3166247903554}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 3}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 4}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 3.3166247903554}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.7320508075688772}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 3.1622776601683795}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1.7320508075688772}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 2.23606797749979}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.7320508075688772}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2.8284271247461903}, "bci_essentials.signal_processing.lico": {"tf": 1.7320508075688772}, "bci_essentials.visuals.decision_vis": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.7320508075688772}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 57}, "f": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 3.4641016151377544}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 18}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}}, "df": 3}}, "r": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 2}}, "df": 1, "u": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 8}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 63}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_epochs": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 6}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}}, "df": 2, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "o": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 2}}, "df": 1}}}, "w": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.mne_export_as_raw": {"tf": 2}, "bci_essentials.bci_data.EEG_data.mne_export_resting_state_as_raw": {"tf": 2}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 2}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 4}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}}, "df": 1}, "w": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.__init__": {"tf": 2.449489742783178}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 3.7416573867739413}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 7}}}}, "y": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}, "w": {"0": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}, "docs": {"bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 4}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 3.7416573867739413}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}}, "df": 14}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 2}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2.449489742783178}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state": {"tf": 2.23606797749979}, "bci_essentials.resting_state.get_shape": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.7320508075688772}}, "df": 26}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lowpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.highpass": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 34}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}}, "df": 8}}}}, "n": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.channel_selection": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.resting_state": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing": {"tf": 1}, "bci_essentials.visuals": {"tf": 1.4142135623730951}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 2}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 2}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.bandpass": {"tf": 2}, "bci_essentials.signal_processing.lowpass": {"tf": 2}, "bci_essentials.signal_processing.highpass": {"tf": 2}, "bci_essentials.signal_processing.notch": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lico": {"tf": 1}, "bci_essentials.visuals": {"tf": 2}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 26, "o": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}}, "df": 12, "t": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 16, "c": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.notch": {"tf": 2.23606797749979}}, "df": 2}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 2}}, "n": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 3, "e": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1.4142135623730951}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 33}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.resting_state.bandpower": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 2.449489742783178}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 2}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 29}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials": {"tf": 1}, "bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2.23606797749979}, "bci_essentials.channel_selection": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 2.23606797749979}, "bci_essentials.resting_state.get_shape": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.lico": {"tf": 1.4142135623730951}, "bci_essentials.visuals": {"tf": 2.449489742783178}}, "df": 23}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sbfs": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sffs": {"tf": 1.7320508075688772}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 2}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lowpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.highpass": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 2}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 29, "s": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 3, "*": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}}, "df": 2, "s": {"docs": {"bci_essentials.bci_data.ERP_data": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 2}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.bandpass": {"tf": 1}, "bci_essentials.signal_processing.lowpass": {"tf": 1}, "bci_essentials.signal_processing.highpass": {"tf": 1}, "bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 14}, "x": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 2}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 3, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}, "bci_essentials.visuals.plot_window": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}, "p": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1.7320508075688772}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.ERP_data": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.signal_processing.highpass": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 2}}}}}, "z": {"docs": {"bci_essentials.resting_state.get_alpha_peak": {"tf": 1.4142135623730951}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 2}}, "x": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 2}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1.4142135623730951}, "bci_essentials.resting_state": {"tf": 1.7320508075688772}, "bci_essentials.signal_processing": {"tf": 2.23606797749979}, "bci_essentials.signal_processing.lico": {"tf": 2.449489742783178}, "bci_essentials.visuals": {"tf": 2}}, "df": 20, "d": {"docs": {}, "df": 0, "f": {"docs": {"bci_essentials.bci_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1.4142135623730951}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.bci_data": {"tf": 1.4142135623730951}, "bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}}, "df": 1, "d": {"docs": {"bci_essentials.bci_data.EEG_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 2.23606797749979}, "bci_essentials.bci_data.ERP_data.main": {"tf": 2}, "bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1.4142135623730951}, "bci_essentials.classification.mi_classifier": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.fit": {"tf": 1}, "bci_essentials.classification.null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.set_ssvep_settings": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.fit": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.set_ssvep_settings": {"tf": 1.7320508075688772}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1.4142135623730951}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.set_switch_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.fit": {"tf": 1}}, "df": 25}, "r": {"docs": {"bci_essentials.bci_data.EEG_data.edit_settings": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.fit": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1, "d": {"docs": {"bci_essentials.bci_data.EEG_data.load_offline_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.stream_online_eeg_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.package_resting_state_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 6}, "s": {"docs": {"bci_essentials.bci_data.EEG_data.main": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.bci_data.EEG_data.preprocessing": {"tf": 1}, "bci_essentials.bci_data.EEG_data.main": {"tf": 1}, "bci_essentials.bci_data.ERP_data.main": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}, "bci_essentials.signal_processing.bandpass": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.check_stopping_criterion": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.set_p300_clf_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bci_essentials.classification": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier.predict": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bci_essentials.signal_processing.lico": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.add_to_train": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict_decision_block": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.predict": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier.predict": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.predict": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.predict": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.get_info_from_file": {"tf": 1}, "bci_essentials.bci_data.EEG_data.get_info_from_stream": {"tf": 1}, "bci_essentials.bci_data.EEG_data.pull_data_from_stream": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.get_subset": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}, "bci_essentials.resting_state.get_shape": {"tf": 1}, "bci_essentials.resting_state.bandpower": {"tf": 1}, "bci_essentials.resting_state.get_alpha_peak": {"tf": 1}, "bci_essentials.resting_state.get_bandpower_features": {"tf": 1}}, "df": 9}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.classification.erp_rg_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier.get_ssvep_supertrial": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bci_essentials.classification.erp_rg_classifier.ERP_rg_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier": {"tf": 1}, "bci_essentials.classification.null_classifier.Null_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_basic_tf_classifier.SSVEP_basic_tf_classifier": {"tf": 1}, "bci_essentials.classification.ssvep_riemannian_mdm_classifier.SSVEP_riemannian_mdm_classifier": {"tf": 1}, "bci_essentials.classification.switch_deep_classifier.Switch_deep_classifier": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier": {"tf": 1}}, "df": 10}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}}, "df": 5}}}}}, "y": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}, "bci_essentials.classification.generic_classifier.Generic_classifier.__init__": {"tf": 1.4142135623730951}, "bci_essentials.signal_processing.lico": {"tf": 1.7320508075688772}, "bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "t": {"docs": {"bci_essentials.bci_data.EEG_data.save_data": {"tf": 1}, "bci_essentials.bci_data.EEG_data.artefact_rejection": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_raw": {"tf": 1}, "bci_essentials.bci_data.ERP_data.mne_export_as_evoked": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.visuals.decision_vis": {"tf": 1}, "bci_essentials.visuals.plot_big_decision_block": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1.7320508075688772}, "bci_essentials.channel_selection.sfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sbfs": {"tf": 1.4142135623730951}, "bci_essentials.channel_selection.sffs": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.classification.generic_classifier.Generic_classifier.fit": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.predict": {"tf": 1}}, "df": 2}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"bci_essentials.channel_selection.channel_selection_by_method": {"tf": 1}, "bci_essentials.channel_selection.sfs": {"tf": 1}, "bci_essentials.channel_selection.sbs": {"tf": 1}, "bci_essentials.channel_selection.sbfs": {"tf": 1}, "bci_essentials.channel_selection.sffs": {"tf": 1}, "bci_essentials.classification.generic_classifier.Generic_classifier.setup_channel_selection": {"tf": 1}, "bci_essentials.classification.mi_classifier.MI_classifier.set_mi_classifier_settings": {"tf": 1}, "bci_essentials.classification.switch_mdm_classifier.Switch_mdm_classifier.set_switch_classifier_mdm_settings": {"tf": 1}}, "df": 8}}}}, "q": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bci_essentials.signal_processing.notch": {"tf": 1}}, "df": 1}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();